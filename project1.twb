<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0123.2221                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0123.2221)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='allteams20192020' inline='true' name='federated.15dnwyh1c4l2mr13zgyl4122psit' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='allteams20192020' name='textscan.05qiqjm1uje41f1gq8q3m1b4meti'>
            <connection class='textscan' directory='C:/Users/lab/gitboyzorro5/FDAS' filename='allteams20192020.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.05qiqjm1uje41f1gq8q3m1b4meti' name='allteams20192020.csv' table='[allteams20192020#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Div' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='HomeTeam' ordinal='2' />
            <column datatype='string' name='AwayTeam' ordinal='3' />
            <column datatype='integer' name='FTHG' ordinal='4' />
            <column datatype='integer' name='FTAG' ordinal='5' />
            <column datatype='string' name='FTR' ordinal='6' />
            <column datatype='integer' name='HTHG' ordinal='7' />
            <column datatype='integer' name='HTAG' ordinal='8' />
            <column datatype='string' name='HTR' ordinal='9' />
            <column datatype='real' name='PSH' ordinal='10' />
            <column datatype='real' name='PSD' ordinal='11' />
            <column datatype='real' name='PSA' ordinal='12' />
            <column datatype='string' name='HTCS' ordinal='13' />
            <column datatype='string' name='CS' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Div</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Div]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>Div</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HomeTeam</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HomeTeam]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>HomeTeam</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AwayTeam</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AwayTeam]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>AwayTeam</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTHG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FTHG]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>FTHG</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTAG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FTAG]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>FTAG</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FTR]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>FTR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HTHG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HTHG]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>HTHG</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HTAG</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HTAG]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>HTAG</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HTR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HTR]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>HTR</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PSH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PSH]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>PSH</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PSD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PSD]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>PSD</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PSA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PSA]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>PSA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HTCS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HTCS]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>HTCS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CS]</local-name>
            <parent-name>[allteams20192020.csv]</parent-name>
            <remote-alias>CS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Away Team' datatype='string' name='[AwayTeam]' role='dimension' type='nominal' />
      <column datatype='string' name='[CS]' role='dimension' type='nominal' />
      <column caption='Total Goals' datatype='integer' name='[Calculation_277815813951528960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[FTHG] + [FTAG]' />
      </column>
      <column datatype='string' name='[Div]' role='dimension' type='nominal' />
      <column caption='Ftag' datatype='integer' name='[FTAG]' role='measure' type='quantitative' />
      <column caption='Fthg' datatype='integer' name='[FTHG]' role='measure' type='quantitative' />
      <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
      <column caption='Htag' datatype='integer' name='[HTAG]' role='measure' type='quantitative' />
      <column caption='Htcs' datatype='string' name='[HTCS]' role='dimension' type='nominal' />
      <column caption='Hthg' datatype='integer' name='[HTHG]' role='measure' type='quantitative' />
      <column datatype='string' name='[HTR]' role='dimension' type='nominal' />
      <column caption='Home Team' datatype='string' name='[HomeTeam]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
      <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
      <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
      <column-instance column='[HTR]' derivation='None' name='[none:HTR:nk]' pivot='key' type='nominal' />
      <column-instance column='[HomeTeam]' derivation='None' name='[none:HomeTeam:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.478261' measure-ordering='alphabetic' measure-percentage='0.521739' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:HomeTeam:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clyde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crawley Town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dortmund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Exeter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forfar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gil Vicente&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grimsby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inverness C&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Juventus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leganes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Osasuna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sochaux&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparta Rotterdam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villarreal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blackburn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buyuksehyr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cercle Brugge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chateauroux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colchester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cremonese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freiburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fuenlabrada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leeds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morecambe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OFI Crete&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAOK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Partick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ross County&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sassuolo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trabzonspor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Troyes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willem II&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wolves&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Xanthi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auxerre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AZ Alkmaar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Benevento&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blackpool&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cheltenham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darmstadt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fiorentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galatasaray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heerenveen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kayserispor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leicester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leyton Orient&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Notts County&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pisa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strasbourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tenerife&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tondela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ajaccio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ascoli&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chambly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ebbsfleet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eupen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Girona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heracles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kilmarnock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Le Havre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macclesfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mouscron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Truiden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sutton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Torino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zaragoza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albacete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crotone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Fife&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Feyenoord&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ipswich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kasimpasa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panathinaikos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pordenone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vallecano&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Volos NFC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Werder Bremen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Brom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zwolle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AFC Wimbledon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barnet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belenenses&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benfica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bristol Rvs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlisle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cove Rangers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Genoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Getafe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lamia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leverkusen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newport County&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peterboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rennes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Etienne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Airdrie Utd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ajax&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alanyaspor&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boavista&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brechin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chievo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FC Koln&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huesca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mgladbach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milton Keynes Dons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Motherwell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Napoli&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peterhead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PSV Eindhoven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virtus Entella&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walsall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Ham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antalyaspor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aston Villa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atalanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chorley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coventry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dover Athletic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Extremadura UD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Genclerbirligi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guimaraes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harrogate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Konyaspor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montpellier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Numancia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pescara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rizespor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Standard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrexham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Accrington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bielefeld&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cadiz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Celtic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dag and Red&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frosinone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hull&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maidenhead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mainz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mechelen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nancy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paris SG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portimonense&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St Johnstone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Twente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waalwijk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anderlecht&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Augsburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crystal Palace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eibar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fenerbahce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gent&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Goztep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heidenheim&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niort&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paris FC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandhausen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solihull&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Mirren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alaves&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atromitos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Betis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boreham Wood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denizlispor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ein Frankfurt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hannover&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Larisa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Levante&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lugo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Man City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nottm Forest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oviedo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Real Madrid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rotherham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schalke 04&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stenhousemuir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Udinese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wycombe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alcorcon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ayr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Club Brugge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Doncaster&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Famalicao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Las Palmas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lecce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Livorno&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Middlesbrough&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nimes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacos Ferreira&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paderborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ponferradina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sp Gijon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swindon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trapani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valenciennes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waregem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AEK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alloa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burnley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cagliari&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dumbarton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Falkirk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mallorca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maritimo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Perugia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheffield United&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stevenage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vitesse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VVV Venlo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolfsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yeni Malatyaspor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asteras Tripolis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brentford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cowdenbeath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Green&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kortrijk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Millwall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mirandes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nurnberg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queens Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raith Rvs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rangers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sp Braga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wehen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wigan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albion Rvs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Almeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ankaragucu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cosenza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastleigh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hertha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juve Stabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Karlsruhe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Le Mans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Man United&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nantes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RB Leipzig&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regensburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tranmere&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waasland-Beveren&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yeovil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cardiff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charleroi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dresden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edinburgh City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Empoli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greuther Furth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hibernian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oostende&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panionios&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;QPR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scunthorpe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shrewsbury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sivasspor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stranraer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aldershot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arbroath&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ath Bilbao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cittadella&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Den Haag&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erzgebirge Aue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FC Emmen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fortuna Dusseldorf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guingamp&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Osnabruck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sampdoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheffield Weds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tottenham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amiens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bochum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bristol City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bromley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crewe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elgin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;For Sittard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lille&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorient&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moreirense&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panetolikos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queen of Sth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reims&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St Pauli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stoke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Torquay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union Berlin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valladolid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Angers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Celta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dundee United&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dunfermline&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Espanol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Genk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hartlepool&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hoffenheim&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holstein Kiel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Coruna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marseille&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olympiakos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salernitana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sp Lisbon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stirling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stockport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Watford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Annan Athletic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ath Madrid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aves&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barnsley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bayern Munich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Besiktas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dijon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fleetwood Town&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fylde&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenoble&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hearts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Huddersfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Vale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Setubal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sevilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sociedad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spezia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CS:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1-1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5-2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0-1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0-4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1-0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1-6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1-4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8-0&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1-2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2-4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3-0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0-5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3-1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0-3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2-0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2-5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2-3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4-0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1-3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0-0&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4-1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2-1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3-3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0-2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0-9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3-2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5-0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1-5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2-2&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Div:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;F1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SP2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;F2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SC3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;D1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SC1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;N1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;P1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SC2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SP1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;G1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;D2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SC0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E0&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:FTR:nk]' type='palette'>
            <map to='#00aa00'>
              <bucket>&quot;H&quot;</bucket>
            </map>
            <map to='#55aaff'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;A&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:HTR:nk]' type='palette'>
            <map to='#005500'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#0055ff'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;H&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Away Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column caption='Away Team' datatype='string' name='[AwayTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[CS]' role='dimension' type='nominal' />
            <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
            <column datatype='string' name='[HTR]' role='dimension' type='nominal' />
            <column caption='Home Team' datatype='string' name='[HomeTeam]' role='dimension' type='nominal' />
            <column-instance column='[AwayTeam]' derivation='None' name='[none:AwayTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[HTR]' derivation='None' name='[none:HTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[HomeTeam]' derivation='None' name='[none:HomeTeam:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AwayTeam:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:AwayTeam:nk]' to='&quot;Juve Stabia&quot;' />
                <groupfilter from='&quot;Karlsruhe&quot;' function='range' level='[none:AwayTeam:nk]' to='&quot;Nantes&quot;' />
                <groupfilter from='&quot;Newcastle&quot;' function='range' level='[none:AwayTeam:nk]' to='&quot;Zwolle&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HTR:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk] / ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk] / ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk] / ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HTR:nk]))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='AwayTeams'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column caption='Away Team' datatype='string' name='[AwayTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column-instance column='[AwayTeam]' derivation='None' name='[none:AwayTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='CS'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column datatype='string' name='[CS]' role='dimension' type='nominal' />
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column-instance column='[CS]' derivation='Count' name='[cnt:CS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]' direction='ASC' using='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]' />
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Div:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;B1&quot;' function='range' level='[none:Div:nk]' to='&quot;SP1&quot;' />
                <groupfilter function='member' level='[none:Div:nk]' member='&quot;T1&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]</rows>
        <cols>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='FTR summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
            <column-instance column='[FTR]' derivation='Count' name='[cnt:FTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='Count' name='[pcto:cnt:FTR:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <rows>
            <shelf-sort direction='DESC' measure-to-sort-by='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:FTR:qk]'>
              <dimensions-to-sort>
                <dimension>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</dimension>
              </dimensions-to-sort>
              <sort-filter-info>
                <sort-filter level-name='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' member-value='&quot;A&quot;' />
              </sort-filter-info>
            </shelf-sort>
          </rows>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:FTR:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.15dnwyh1c4l2mr13zgyl4122psit].[pcto:cnt:FTR:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[pcto:cnt:FTR:qk]' />
              <text column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:FTR:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</rows>
        <cols total='true'>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Home Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column caption='Away Team' datatype='string' name='[AwayTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[CS]' role='dimension' type='nominal' />
            <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
            <column caption='Home Team' datatype='string' name='[HomeTeam]' role='dimension' type='nominal' />
            <column-instance column='[AwayTeam]' derivation='Count' name='[cnt:AwayTeam:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AwayTeam]' derivation='None' name='[none:AwayTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[HomeTeam]' derivation='None' name='[none:HomeTeam:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' direction='ASC' using='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:AwayTeam:qk]' />
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:HomeTeam:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:HomeTeam:nk]' to='&quot;Juve Stabia&quot;' />
                <groupfilter from='&quot;Karlsruhe&quot;' function='range' level='[none:HomeTeam:nk]' to='&quot;Nantes&quot;' />
                <groupfilter from='&quot;Newcastle&quot;' function='range' level='[none:HomeTeam:nk]' to='&quot;Zwolle&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk] / ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk] / ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk])))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='HomeTeams'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
            <column caption='Home Team' datatype='string' name='[HomeTeam]' role='dimension' type='nominal' />
            <column-instance column='[FTR]' derivation='Count' name='[cnt:FTR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[HomeTeam]' derivation='None' name='[none:HomeTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='Count' name='[pcto:cnt:FTR:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Div:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;B1&quot;' function='range' level='[none:Div:nk]' to='&quot;SP1&quot;' />
                <groupfilter function='member' level='[none:Div:nk]' member='&quot;T1&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' direction='ASC' using='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:FTR:qk]' />
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' value='19' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[pcto:cnt:FTR:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</rows>
        <cols total='true'>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column caption='Away Team' datatype='string' name='[AwayTeam]' role='dimension' type='nominal' />
            <column datatype='string' name='[FTR]' role='dimension' type='nominal' />
            <column caption='Home Team' datatype='string' name='[HomeTeam]' role='dimension' type='nominal' />
            <column datatype='real' name='[PSA]' role='measure' type='quantitative' />
            <column datatype='real' name='[PSD]' role='measure' type='quantitative' />
            <column datatype='real' name='[PSH]' role='measure' type='quantitative' />
            <column-instance column='[AwayTeam]' derivation='None' name='[none:AwayTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[FTR]' derivation='None' name='[none:FTR:nk]' pivot='key' type='nominal' />
            <column-instance column='[HomeTeam]' derivation='None' name='[none:HomeTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[PSA]' derivation='None' name='[none:PSA:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PSD]' derivation='None' name='[none:PSD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PSH]' derivation='None' name='[none:PSH:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:HomeTeam:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:HomeTeam:nk]' to='&quot;Nantes&quot;' />
                <groupfilter from='&quot;Newcastle&quot;' function='range' level='[none:HomeTeam:nk]' to='&quot;Zwolle&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='1.3300000000000001' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='1' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='2' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='average' id='refline10' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='11' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' enable-instant-analytics='true' formula='average' id='refline11' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' z-order='12' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' enable-instant-analytics='true' formula='average' id='refline12' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' z-order='13' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline13' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='14' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='median' id='refline14' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='15' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline15' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' z-order='16' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' enable-instant-analytics='true' formula='median' id='refline16' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' z-order='17' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='quantiles' id='refline17' label-type='none' scope='per-pane' symmetric='true' tile-count='4' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' z-order='18' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' enable-instant-analytics='true' formula='median' id='refline18' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' z-order='19' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline19' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' z-order='20' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='3' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline20' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' z-order='21' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline3' label-type='none' paired-distribution-id='refline4' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='4' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='average' id='refline4' label-type='automatic' paired-distribution-id='refline3' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='5' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='medianconfidence' id='refline5' label-type='none' paired-distribution-id='refline6' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='6' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='median' id='refline6' label-type='automatic' paired-distribution-id='refline5' probability='95' scope='per-pane' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='7' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label-type='automatic' scope='per-table' value='1.3300000000000001' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]' z-order='8' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' enable-instant-analytics='true' formula='constant' id='refline8' label-type='automatic' scope='per-table' value='2.9699999999999998' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]' z-order='9' />
            <reference-line axis-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' enable-instant-analytics='true' formula='constant' id='refline9' label-type='automatic' scope='per-table' value='1.49' value-column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]' z-order='10' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows total='true'>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk])</rows>
        <cols total='true'>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk] * ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk] + ([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk] + [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column datatype='string' name='[CS]' role='dimension' type='nominal' />
            <column caption='Total Goals' datatype='integer' name='[Calculation_277815813951528960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[FTHG] + [FTAG]' />
            </column>
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column caption='Ftag' datatype='integer' name='[FTAG]' role='measure' type='quantitative' />
            <column caption='Fthg' datatype='integer' name='[FTHG]' role='measure' type='quantitative' />
            <column-instance column='[CS]' derivation='Count' name='[cnt:CS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_277815813951528960]' derivation='Sum' name='[sum:Calculation_277815813951528960:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CS:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;0-0&quot;' function='range' level='[none:CS:nk]' to='&quot;1-0&quot;' />
                <groupfilter from='&quot;1-2&quot;' function='range' level='[none:CS:nk]' to='&quot;8-0&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]' direction='ASC' using='[federated.15dnwyh1c4l2mr13zgyl4122psit].[sum:Calculation_277815813951528960:qk]' />
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]</rows>
        <cols>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='allteams20192020' name='federated.15dnwyh1c4l2mr13zgyl4122psit' />
          </datasources>
          <datasource-dependencies datasource='federated.15dnwyh1c4l2mr13zgyl4122psit'>
            <column datatype='string' name='[CS]' role='dimension' type='nominal' />
            <column datatype='string' name='[Div]' role='dimension' type='nominal' />
            <column-instance column='[CS]' derivation='Count' name='[cnt:CS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CS]' derivation='None' name='[none:CS:nk]' pivot='key' type='nominal' />
            <column-instance column='[Div]' derivation='None' name='[none:Div:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]' direction='ASC' using='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]' />
          <filter class='categorical' column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Div:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;B1&quot;' function='range' level='[none:Div:nk]' to='&quot;D2&quot;' />
                <groupfilter from='&quot;E2&quot;' function='range' level='[none:Div:nk]' to='&quot;T1&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk] / [federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk])</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='FTR summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15dnwyh1c4l2mr13zgyl4122psit].[pcto:cnt:FTR:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Calculation_9007211417567235:qk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[pcto:cnt:FTR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F933C685-96F9-4975-9241-8196DD54FC4F}' />
    </window>
    <window class='worksheet' name='HomeTeams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D9C84BF-B494-492B-9EBB-EF0B958F9B2F}' />
    </window>
    <window class='worksheet' name='AwayTeams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40E2B3BC-B4B1-40E0-90E4-A7726A798B8A}' />
    </window>
    <window class='worksheet' name='Home Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95C9CE3E-DE2B-4870-96BA-070C4A8752DF}' />
    </window>
    <window class='worksheet' maximized='true' name='Away Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HTR:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{836FC45C-C778-41DF-8ABD-1683B41AA69F}' />
    </window>
    <window class='worksheet' name='CS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A24D1C4-AD36-431C-99FF-14B8ED8A3CEF}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[cnt:CS:qk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:AwayTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSA:qk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSD:qk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:PSH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62A53CD6-C95C-42BB-88FC-B4F911DBE5A2}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTHG:qk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:FTR:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:HomeTeam:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07A5ABEB-2FF3-429C-8A27-385F617C231D}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:CS:nk]</field>
            <field>[federated.15dnwyh1c4l2mr13zgyl4122psit].[none:Div:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D42EE76-AD7B-412A-A2DD-595D916FC7D1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Away Analysis' width='192'>
      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
      2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AwayTeams' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='CS' width='192'>
      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
      +gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FTR summary' width='192'>
      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
      /A9H6Sb48bq9rgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Home Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdlklEQVR4nO2dWVBbWZqgPwmQQIjNLBaY1WDAxtiJjRNsMIsXvGRiZ2Z1dddETE331EO9
      zhYxz9kzbxUzPRUxEdMROVFVnT3d1V3tzrQz8ZbeWA3YLPLGKhIQBiSzL2LTOg8CGzBpjAFJ
      F50vgrC43Hv1C+vnXJ3v/v+RORwOBwKBlyJ3dwACgTsRCSDwakQCCLwakQACr0YkgMCrEQkg
      8GpEAgi8GpEAAq9GJIDAqxEJIPBqRAIIvBqRAAKvRiSAwKvxXb1hcHDQHXEIBABMT08TFBTk
      sueTiduhBZ7E4OAgMTExLnu+t0aA1cwbW2mZj+FoYqgr4hEINkTFUAUVwxUrtn2Z8eV7H/8e
      CdBG00TgByfA3/z2N/zn//hfP+jY9TBqKynvn0JlmyPu4FmOpIQt+6mJ6kodJwuztuW53y8+
      LWRloQGqqys5ebLQbbGshaFTS2PHS8xzZk58+mdEqwDMNFbVMDDvx+WSk+4OcV0qhiv469a/
      XrFtSxNgia++/ppf/+Vf8tXXX/Pzw2r+9OoQf7H7Gdcm0lG1PWDCNk9YxmWidNdoCYxjoLGV
      S//uPM+ftfDVN/f5GD2c/hXc/z2c/gVN//d/Yg2JIu/iLzkYq3rvgFcSTHFpIUGv2mgZmcc2
      N0pVZT2quExyMnY5d7HN8aiqkllVHAU5Gcwau6hq7CAiKYOcBCUN7QMMvZrg+JnTzPQ08rRr
      iAMfF7E3KvADY5IOmn0fUZqaxVBLLVPWpa0KsgtO4fNE687QXMa6s0AWixkZshXbwg6fYa61
      ggf1Bkr2zXD/+StkihACFVbAl7xP/g0l+8PwT8oj81AGv/7Z6VVnVaKJDmV2Zh4rtk2EP0V5
      WRk1LUYiwgJpqG8mq/g8EZNtdE059+hqqCciq5isiEkaukZobh2k5OIF5kd6wWRkXJlASc5u
      uvpmwAEyh5W6+sebiOnt+MrKyugZWdiic24dMpmDzmd1jKlTSZEbKCsro3fU7O6wXMo7E6Cm
      7O/56qaOwkN7iFgw8n/+8Ed0himQhZAWPMlzWSR7YtLJjHRgdciQ+7x9unD7JH/7zQNCwn25
      +offUf2sF5hkxqTE3zJO5+DUJsIPpri0lLMnDtGv73mP/R3I5H74YMFssQMQGRmJn78/fjjo
      eTXDuZJThCg3k5Rvx1daWkpShHKLzrl1DLxowj/pGOkJEaCOprS0lMRwhbvDcimSngUyGToo
      b+xErlCTW1BAKBPLLoE06HtHSYgLXXEJ9PJFHS0vp5mX+fGz/HQMRBOtGMUwHYTFqKV1CBIT
      dpO+N3EL4jNAdDRqQK/vJSFh8+fcSvQv6nnWMwxA5olzi29+E5Vl5UwBBMdQWnjUpTFtdBZo
      sx+CJZ0AH0J7wwN0Q2YO5xYSHx7g7nAEq3D1NKjXJYDAsxEJsA7CVO9shAkWeDUeZ4IFAk9m
      202wJ2M3Gfj+hzp8lAoyc8+QGOH/k/tWV1dyMucgnYOQmhi+5j4mQwfTQWlEq7cmPk83wQCT
      PU38vsbAf/rlp4tb7Dy8/S0jczY0B06Rkxbp1vjWw2Um2BNpe95N4WdfEOYDYOVpzV36Tb7k
      FRcRIjdRU17FvCyC42dzXh+jUCoxveqmqrGFyOQsjqWHMqifoGNgmGNJYSi8aRrcMcvTPjtZ
      iSFvts3rITKPy0c11NbVAZ6dAJtF0vUAU3YZIT5L38mQycA210+99iXPG5tJyysh3nce09Iu
      5jH0RhMOHMiR01hbhxkT9dWtHM0+jMmoZ2xLRahnm2Ddk6ekf5zt9PymRRNsNOGnVgEykMnW
      OYP0kXQCpIbLqescwm6ZYfJVB2PKA5wpOop8YQGbQ4bSz4eFhbff0S2d/RSWnCUtQo0ZSMo4
      RLBiO34Vnm2Cp6dGeXTvOs+fPeP5iMJpguNjmdC3Y5kdwjTv5+4Qtx1JXwKFp+ewW1vDrQdW
      jhfkEzJ7n6ae3aQm7CYqyI+qO7eYHJknBoiPTwBFEAkaJRGyPTy4U0F00j4UqNFonOdTaxLw
      28JLIPXSiZee38M4UvgpR4BevZ7EhMXPRfIwjqSquFPVRv7pArfG9z4URRbBgQ8/fsdOg46/
      bKf2qY6IpMPkZMS7OxzBeyJEmMCrEQmwDsIE72yECRZ4NcIECwQbwOtN8PW79ch8/Yjam0lO
      hmfNtHi6CRY1wRJPgLbn3Zy89PmiCeZ1/e988F4Kjiaie/KUnoEhko8WkhzuoKa8CiLTyM9K
      5FlN+WtrHKrc+cJnLURNsMQTYMIG+32gqbKMPnMkH6nH6ByzIO+4Q3vyX2EctnDq/GmaGtqY
      7hwjNa8EdFU8Mcbis8wan8/drmlSpwlWA+NWJZ7299RZE1yPPSSVdLmBsrLGZZVh3oGkEyA1
      TEZdxytOnDyPtfEpFquCnKJTJKsXmHPAfEQkfj7++CvBsVwIm7oXrfEeap5t5y0Kzq4VS5dA
      nsZSTXB8kPNtUFpa6uaIXI+kEyAy4zhTTx5y/dYUqR+dIFXjx8MHD+jxCSXvZDYajbM1ikaj
      YffBFGrK7zgvgVKSeFJ197U13i483QRbsfGs4hZPWbsmuH/S7vKa4I0iTLBgR+HqaVBJ3wwn
      EGwWyY0AwgTvbIQJFng1wgQLBBtgsyZY0p8BjNpK/vigAQD7RBv//X9fAUCn6wCjlkqd6V2H
      bztGrRbj4mNPnAYd7Wulouwf0RqXb7Xz8Pa/8t3VP/GoY9hdob03SyZ4+ddGkHQCQDDh/hZM
      DuhoG+XAQee0o0LxpvrK9KqbmzfKaGjvB0y0NjRy88YN+sY8r0TR1YTHH6Do2Ko5xKWa4M//
      HNuYzj2BuRCJJwAcSAmivcfElNyPiMULur4+/eufr67/HRxXcq4kh8GuPhdE59k1wSsQNcHS
      xC8qHeuP15EHp67589X1v+GRkfj4+aN0SbmrZ9cEr2CpO7SoCZYOTtPqR8yeg4SmhTGmct7T
      Ex+fAGolCX4KIoLWqv9VvLbE2x8fb2LyMAwdTTR2DgL9qLKLSYtWi5pggcCdCBMsELgQyY0A
      wgTvbIQJFng1wgQLBBvAy01wBf9c2QxAZXX1ho7VVlZjAjp1ndsQmRNPN8Hg7A79v/7f9Tcb
      7FM8+P57ysqucf9Rh/sCe082a4IlPgKEkKCa4MfJpVUd52l4UMmQNZCi0/lM9LXQ2dFL8N4s
      jqZG06WtoWMYCorzX59B6VXtoFexVndoeTCnLl1idvwlj9sn3Bebi5D0CACQlP0xL7XNK7ZZ
      xzt43DHGgGGSEyUXcOjbGDI+QS9LpSQvlcd1T17vu9wabz2ebYLX7A49asbQ0UR5QydRu3d2
      a3TYAQmALJC00AVaR804jK3MxORy6ngmtgUzvkolfjIw2+1ueqGebYLX7A6tmkUencHFM/no
      u1rdHeK2I+lLoCXTqv4om8OzLch2ZxDw4h6t4TGkaNQYWwe4ddNI8uETRGhCSTDUcOeh8xLI
      NNCHgu01tJ5ugtfsDu3rh76hmoZpO4dyhQmWNAaDgejoaHeHIdgAwgRvIeLNL1gPyY0AwgTv
      bIQJFng1wgQLBBvAq7tDG7WVlPdP4T83S3rhJfbvDnB3SCsQ3aG3H6/uDv2m9+YIdbX9dBtf
      0dJvIiuvmNC5MSZskwzPhBBqH0DX/Yro5GQM3d3sP34Gtamb2qddxB74mMN7o9z9QtyC6A4t
      +Vkgp2n97ttKIvbF4ZDJkNvmqKvXYjL+SOuonMNp0QwOmyg+f5pX+kGKz+Vi0OmdtcIyB7V1
      9dsen6eaYGd36DrG1KmkyN+YYG9ih4wAACYqW5ScPVPE/ZpnQDCHDqciB1RBIfj5+BMRFYaf
      jwI/P2jtecWpcyXcvl3hkvg88WY40R1a4gmw3LSCmj0hs1Q09bAvNQG18s2tB5rF/Zz/OuuB
      leFm7t2rJTZln0vi80QTLLpDi2lQgYchTLBA4EIkNwIIE7yzESZY4NUIEywQbICWIWhd1cP3
      5xnvf7ykE8DQ9phHXUPIbHLyLlxkszUnJl0luqBCsjTr7/s+LJlqldVCWm4J6dHqrTnxFrG2
      CV6aBbLhH5HK2eObmGJxAa3DcGVV3Y7XJIBxeJz0I3mk7QlDhpWny9b+9ZvsoeJxG4mZuSQG
      TL5+vMthIjwxgelePcrEBExdWpo6hjlaUMzS23NutI/K+ufEZeaSER++iQiXPICNqqo60qPz
      1z/EhaxtggMp+LQUmX2OusZ2d4bnEiQ9C5SVX4zlpZarV39gwiJDtmzt3672dtTR8UTvUq94
      bNT3YQbG9H2YzEae6mWcL8nj6eO61+etb26j+Px5JtuamdqSSH2Q+ay/l6tZ2wRbWBh7SVVD
      Ox9lZ7k7xG1H0iPA8NAoaceK0Lwo5+XAyrV/U47kMTc9xsP6x5zKffM41teG1WZjeGQMV801
      TA62Mi/f/ma8G2VtEzxLfd04J49nsfObo0s8ARTMUn77JoF79pOXmMiTvjdr/y5MDPLoaTdp
      R/JXPE7wn+Te7btExSWjVmg4nGDg9p2HHC0oRmEeQKOE9CP7Kb99m7jMXII3EZ9ao3KuFB+V
      THGu511Lr2mCzfNMj+i5XqZHGZFIyfFMd4f5Tg5Ews+FCRbsFIQJFghciORGAGGCdzbCBAu8
      GmGCBYIN4NU1wRsxwe6oyZVmTbCdh7e/ZWTOhubAKXLSPLs/qFfXBK80wWZaHj+id3iGrPzT
      7LIbqax9SmDsAfIP73V3qB7JmiZ4aZ3goxpq6+oAz06AzSLpWaCVJtjMpDmICyX5tGkbwQHI
      ZXTU1jHmtgglWBPsZesES3oEWGGCJ0HpHwA2M3bktLb2kHvqHB23b+O+Mm8J1gTbx+m8144l
      LkmsE+zprDDBEVB2uwHj6B5OFBaimu3n3r17xMSmoMY9NbmSrAkW6wRLFTMGwzTR0Zu5e1Pg
      boQJ/mAU4s0v2DCSGwGECd7ZCBMs8GqECRYINoBXm2BdZTVBhSfRAFqtlqysxQomoxYtWYRN
      6YhJ3Ye7FkL1dBPc396AVmdkfs5G0aXPiPQHb+sOvYM+BAMOC9rqO9ysWuxsrFSgwEznkwZ+
      uHGDLqMJ29wo5bdv0NQ5CI4FGspv80OVFisOurTV3Lxfx5zt3U+zU4hNP8ann5wnXRPIvH1p
      q7M7dHyUZxXwbxc7KgEGnzeiTMvjXN4hAPR9fYCZgWELp86fZqRXx+Pye4wt2Gi4c5+J6Zfo
      xuSkJMViH37OvaZBLGPtVDS93KKIPNsEg4mq67cYloURZhHdoSVH6C4Z3foJwsNMvJqWsUtt
      w1/px/zUHCz7AxYaEYmfjz/+SphVBFN06hzqhWkc/r6UFO9C97AK+8E4ko4UUPJRBNMzli2K
      0LNN8MjwDHmflmLqqODZeJjoDi01IjOPY3j4gDsd/hQU5xMkn6Xm/l0M6jD2aiAsPp6lbtDg
      7A4dmbqHBw9u4RMaz8ljSbQ31TMfnszHSQexj1Zw87aVj07kb6oWeAlPN8GyuTHu3HpMQEQy
      Bfv9F7eK7tACgdsQJlggcCGSGwGECd7ZCBMs8GqECRYINoBXm+D6hw/JzsvDlzlqalrIz892
      d0gr8HQTLNYJlngCpO+S0zFmJ3m2Bf+4DCzTRsqrmog5mMPBcAv6CRsDwzNkxQe86fa8y0xD
      +wBDryY4fuY0loFnNLb0k5yVR3psqLtfkksR6wRLfBYoNC2N8fZ2Ol5aOJAQQM29O8zYbFTc
      fYDZZKS6dZTsw2kruz2bjIwrEyjJ2U1X3ww4ZCC3bdN6wZ5tgsU6wRIfAZDvQsYL5uUqVIBM
      Fc7ZUxeQzU4jn+sm49BhFGukeGRkJH7+E/gBnf1jlJw9w637NdsQoGebYLFOsNQTADgQF8Gw
      bzwAx3MOU3HnJgGafeSnaVjysLnLuz2rzc7til1odimQyUK4U9FE0r7ULY/N002wWCdYTIMK
      PAxhggUCF/LWCCBMq8CdCBMs8Go86hLoyTe/4d//t3/AAXz1N79lYgMn/uY3v0UP3K+4v6kA
      12Oiv42Ogcl37mMy9OKO2T2ToYOysjLKH7Vi9cA/M3bzFDV3b3K/7gXLi+AMXVpu3LiJfmTO
      bbG9L1da4M+vrPzaCOt+BsiJclDdN7v43Sy3//gHfvf33zJmhqbqe1z7l6+5/rAVcNB49wq/
      +4erjC+8+d9W+fuved6tomNwgrE+53KeJp0WnentfUxGPWPrJIBWu/Xix2Sc5VhpKUdiHZTX
      t65/gIsZGhgiI/8sR0KGeTG0tNXElCWCCxdO09va7M7wXMK606DpJRdpv3PT+Y3NisUBk7r7
      fFObjaOhiUv/4b9Q+dv/wdPAXmqm9/Hr07P87d89IHHx+Lr6hxzPzdue6O3j2O2hqOxjTDvM
      NDc10uvXj/1EMTOdFQxMWYlNzyN6cXddcyXtA1OExKZzRD3GtbZRVNPDpJ0opLGxkf7+KYrP
      ZVJ3p5YFs4XMks9J2ILS2JA9Gfj3bodn2ByapBSss8M8HgniUPrSVjVp+wPpbXtCVFyyO8Nz
      CevPAvmEkxk0ypNhKzNtFbSrjvDFqSwcOEDuh9LXwbzdgZ8bGglPdDSj1bXT1aXlSbeZo0ez
      OXGulLRomJi0IcNGb0//m/0nJpHJoLe3B1CQc+oiX5w+hDkgkezsbEpLC1FMjzNrl+FYGKHX
      sMZw8kHYcHhgob1lYoBH7aPkFGSjnn1jgrue1iGLSmd/kmb9k0icd44Amv15hIZAYmkpnWYt
      4el5JDd9i04dx9F9ITTVDvFPf/iagxf/LQcOxTI79K/8031ffvVXn2FoDCQEtu+vP9A+5Muv
      fvk5/o4ZKipfoEgLoP7G9zgKslkwW/ANVS9b69aBecGMzDeUgDWS1WfGyPdlVeTlRGGx2gkL
      VG1BhM5bIVRWK2m5Z7fgfFvLk0f1DJkV3BzQkXninNMEm/v5u7ouwveM0iGBZVI3y6ZmgZrq
      6sk4nsv2XuULvAlXzwKJaVCBRyESYB2EqNvZCBEm8Go8SoQJBDsdSSfAkmm9caeSyYXVA5kZ
      fa/BLXEt531Mtbtw2Bdob6ph9WyvlEwwX37pXMxv+dcGkHYCLJrWkrwknj3pXvVTM316o1vi
      Ws5yU+1pjA++JFTti3FFAggTLCGc8+zBMh8O5p2h/0UdDd3D2GwBnL98HABT/wtuN3TjY7Nx
      7PxlXjVcp98kY04exC+OhvD76leE24ZILPwLVIb616a4IGvf5sNbYaohyMNWHd0VmwLGaVaO
      k95lgiWeAM6Sw7BpA1pdDwszVj6/dInpzkq6hp17dP04zrnPLxE03UllVw9BwelcLk59XaKY
      dfI8WWodWoNl0RTL6O3t2ZIEcJrqKXbbB5jSHOZksge3HDcZKCtvJPPEOaz9jfjFZrE/PMDd
      UW07Ek8A5wigtpuJ3HeCZMUYV7//fnEEAG07pCSHcfvq94sjwCX0Nd9SdrObWdvql/5uU/wh
      rDbVJOdszYm3CENHE43NzRjpR1VULEywN9BceZ2BKQiKTqEoO339AwQuRYgwgVcjEmAdhAne
      2QgTLPBqhAkWCFyIpBPg3SbY/ZgMBpYck17f685Q1uSnaoKnh/toeN7ltrg2wpctXyK7Ilvx
      tRGknQDvNMHr09upYztr5U1G4+sE6OvTb+MzfRhr1wSbGRgxI7dOuzM0l7EjPMCSCdY119M9
      PERMahamrhZGzRYSM/KZ667COONDWnYRyqEnNPWOE5NyiIUxI4mpCdTfvcPwgpm9mSVkbEUR
      8Kr41MC4VYmnNRtfuyZYQfr+FLSiO7QUCKa4tJQzhVkYenrAaufIqVIyA8fQDszgsMPCwjxR
      UVHI5DLm5+Z5aXLwxeVScjMWe3Wap5mctYNjgd4tv3nOGV9paSlJEcotPvfm+amaYG9iR4wA
      SyaYhVkC/GQQkUScsgVkAfj4yJidnMVhtzE3N0dcsJxr35WhSXEupo3DxrzFSkBYIJ73KWJ7
      WbMmGBOVZT/QaTRKojnuZhHToAKPQkyDCgQuRHIjgDDBOxthggVejbgEEghciMQTwMGPT2q4
      8UM5Y3P2d+7pLhPryTXB2OaovXeDhvb+FZulZIK9uiZ4tP0RRlUqF059jI/N+s59+/r0YB6l
      s3f0J/cxGTreKhDfLJ5cE9zxuI7oY2fwNzyn/3X9uzDBkqFz1M7xvCjkQIifmfq7118b3Shz
      B1Ut/ZiH5ij+9S+cB5jHMIwHESFrofZZN5aASD4/k8jNf27AotlDTsg0pqC0rQvQw2uCJ32D
      +DhEiSN9N/VDC8QmKBEmWEIEyx1MLt3Ftcro9k3L+Nlnl8lO2/PWceMTE8hkMka69ZiA0LgM
      Lhcd2fL4Vnav3uKhZSswW7AAMzPzBNpHhQmWGvsz9/L91W/w8VeSeeTwCqMbrZjjyrUybMOz
      FBWuPM5iWcDukKNSOdv6Bqi2ohP023h6TfCBhGCufXMVh08Ilz6L4VBSDMIE7xAMumYa2wew
      OIK4eKlIdLCWCKIkUuDViARYB2GCdzbCBAu8GmGCBQIXIukEWKoJLiurxAMnGQFpmmDRHVoi
      LNUEl5YWosaEruPDKrqWry/cqevcwgilaIJFd2gJsVgRpozgXEkSRqOJAMvKDtGPvruDKUBD
      zsFwnj7TYXYEc/qTVG7+vhr/cBvBicdxtL1ZX3jIaCA1WsY/XmsjWDVNVOanxPMjje0DyENi
      +aQg6/3Dk6QJFt2hJYSzO7RzNVvnWgA/jq/sEB2wO4XTJw5Rc+sKCzZ/ZMwzZ4bkrJNkZanR
      ag3sO5pNTHQW+9QwtHgP2IGcU2TtM6HVzjFunUAuk9HT2wsbSACP7w69aIIXZuYJ9BmlrKxJ
      dIeWOslhvis6ROsGnf+JaUmx3GsZIkT19ktWqH2c6wsXnlrznFbzAnaZL6oNto2WpAkW3aEF
      AvchpkEFAhciuRFAmOCdjTDBAq9GXAIJBC5E4rNADvStj3neM8r+oydJ1rhu6HwfTIYOyhs7
      UUclc/LjA/h6mAfANkdt+QP8Yg9zLD329eaR3uc8ah8hr7iIUKWnBb2SKy1wpXXltn/5+fsf
      L+kRYLT9EXri+OTCOUL8LO4O5y2WTPWRWAfl9a3rH+Bi1jTB9nGaO2cpKcjgcV2TW+NzBZIe
      ATpH7eTnxdBcWYZ5VyYBlnGqn3RgsSjIv5BL9Z+u4ROsQhmVSVb4NBUvXoJVTtGlc+gqt6sj
      9NuE7MnAv7dmW5/jQ1jTBJuGCE1Ix08Vgtr/R3eHuO1IegQIdFiZtMHRwlL8reN0vXjBjMUG
      zDE/D3EHcvik9AsiFCZaBmf4/LPLfH4ihpYfX21jR+i1sOGwrb+Xy1mrJngaLKZZwAFeMD8i
      6REg46MUyq5+g1zpR0BEMjmpCbTUdRMQHMDqK9eMmECuXvvOOQKci6OmxRUdoZ33KqmsVtJy
      z27rM30Ia9cE2xl4/i3fXXUQc7DI3SFuO2IaVOBRiGlQgcCFSG4EECZ4ZyNMsMCrEZdAAoEL
      kXYCmAxb3sx2q/HkmmCHfYH2pppVv0MLz2sfcP3GD/RPLLgrtPfHm2uCMRkxrpEAWq3nNHb1
      5Jrg8cGXhKp9V/4O7VY0qR9z8XwB7Y2P3Babq5C0B1hCW32bV1M2hqbhbG48jY2N9E/ZyUtW
      07CsDrhisQv0djTCXRMPrwneFZsCxmlWqEB5ANbRJspqB0jNKnBXaC5D2iPAEmoN5z/5hONp
      MQQlZpKdnU1p4VFanz9jweYAu7MOeLu6QP8UHt8dejmmN+sER6cd5cKZfAZ7trZDhieyI0aA
      1cwYOymrcpC7qg54u7pA/xSeXhNs6GiisbkZI/2oioqd6wRPDVJ2vQkcoNiV6O4Qtx0xDSrw
      KMQ0qEDgQiQ3AggTvLMRJljg1YhLIIHAhUg6AZa6Q/9Q3siCh45j0jPBoju0ZFiquc3PUFLf
      3L/+AW5AciZYdIeWJnK5nJb6u3QPLxC5N5NE8xANE0PsiTnCWMcDzLIApuZkBKushMTnszfA
      8GEdnzeCFE2wl3WHlvQIsFRyWNtpI/ejCCYmZ5HhQN/bC9jIyD3PkbRowuMOcLH0C9L3JXLx
      0wuobCbGJ5Z1fN4mpGqCu57WIYtKZ3+Sxt1RbTsSHwGWt0dfYGHegjwgDH8HgBJVgM9PHvmh
      HZ83giRNsOgOLRC4D1dPg/5/QbRWzZGd8TcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='140' name='HomeTeams' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d2xdWX7n+bnh5Ug+5kxKJJVzKYdSVVfqru52Vye3x17bs4uZHWC9f8wC
      s8Bggd0B1p6FF+PdHYwxO7DH9rqDu9zuUN3VXV2lKuUcKVEUJebMR76cw037ByV1qfUokRQp
      UuL7AIWi7jv3vHPvO78Tv+f3EwzDMChSZJUiLncBihRZTooGUGRVUzSAIquaogEUWdUUDaDI
      qqZoAEVWNUUDKLKqKRpAkVVN0QCKrGqKBlBkVVM0gCKrmqIBFFnVFA2gyKqmaABFVjVFAyiy
      qikawApEUZTlLsKqoWgAK5Dx8fHlLsKqoWgARVY1RQMosqopGkCRVU3RAIqsaooGUGRVUzSA
      IquaogEUWdUUDaDIqqZoAEVWNUUDKLKqkX/7gq7rqKq6HGUpch9d18nn88tdjFXBYwagaRrB
      YHA5ylLkPtlslmAwiKqqyPJjP9FTSafTXLp0icOHDyNJUsE0C817LqiqSj6f52//9m/5wz/8
      Q5xO56Lm/bRyp1IpzGYzJpOJaDRKPB6noaGhYNrHcjKZTNTU1CxOaYssiPHpKMmYQT6vYTYX
      rsBPIhrJcPL8Nb781a9hMZsLptENA1EQnrWos+YdiUT4yU9/xp/8yZ9QVVW1KPkahoGu67Ma
      9QOmpqYYDmZANJicSDA95Uf01BdMuzRNQJFnoqPPz4fXby34/lw6ztCtEcLxDDbb8ni/jyaz
      5JdxJP1Xv7jOdDxPOhogkwjj68oWTDfHSbDGYNc1BqYSzOV1jg30kNHmXtilpu/ap/ziww85
      camLVH4FFew5Ep/q59LlTp7X05tNMju3bUSWZbR8jrMf/YrR5P1KqIY4eew4Y9PJ2TPI+Lk3
      sPRD8TkZgJ6apHcsxcTYEIZhoCaj3OzuQZvFGsbnaADJ6S7uDKfmU94FkU4IbD1wgBZnnNPn
      bq0o43xejPbfZurOLQbj+nP/bk1Rmeg5z/nbAQwMovduca6ri6nAkwxginsDIdT8MKcudJFb
      orLNaQgUmQxT1lxNwh9G0fP0XjrO8dvj3Lo7zBcO7mC04yQ90wrN2w+xf0PtzE1ajrtXznCt
      Z4rSxq28fmATYx0nuTsRIRIT2XdkO12nTzIQsTOyaQ97t7g4d+wsccPJzsNHaKtyL9pDSiYr
      7pISvCV7yCQ+YzKm0lK6ikZ/RoZASKR9RxVT/ZM0N+tc78+wc2cbgaFbpMwVGJOdXLs7ibdx
      B0f3N3Dn0k3iyTDW+h1Yp65wZzSBtWodbx3ZSW6qi+Onb5DTzKx99TW2evKc/OwMEcXKjlff
      Yk3F45Ned1sbkdE7RHdV0j0SYV2TGzBIT/fx60/OENEcvPqVr1KeG+bTY2cIRgOIDe9iYELQ
      JZToFJ/9+kNGYzqt+97h8AYrx378MdOpNDlzPb//+29jX8CrmVMPMBEJU1FaQ4spTk9Mon33
      UQ4dfY3f+503qPDYsHtKKHGb6L10k9jDuwSsdjelJR6ifZcZjEEslqJt91u8t6eEiXwlR149
      wNG3vsnbhzdgl014S0pxEObqnZEFPMrcHtdskcgrq6sLUP03SDraqatfS2SqH81VgurvZiKt
      M947gJoPcfr8HewuB+M3PqU7mKf39h0sDTvZta4em82O2+si0HWZ4cQoV64Os/tL3+HAthri
      8RA3z3/GVFbGSoyz5y6TK9TJmGtZU55mZCBCJG+h1uMEPc+lEx8RUM3YDD/Hjl/lxvlL1L/6
      Hv/8229QZpfR9RjjExEQJeweL6UekZtnzxHSMwTSFt759j9jkynO8ALfzdObQT1J740OYt2j
      SGoMZ76F1h1e8oqCYRik4qOE0mXsfqWZ6yfv8mD1OpdKMhxMsWPXLkY6TpDPg83hpcRtx6bY
      EPIzs/oH+YT67yDWb+GVOi9nJpegmzYMsnE/o0HYuL7wyshLiaFw7/YgY8N3+GDMYDoqsu/V
      fbS1ltB95WPSprU0uVQclWt5Zf8exFfSmJ0QrGtjY1stgjFI95DKtoOvYIpFyah5DJMTr10m
      oKoYJp2sKrFp+x4aymzkNAkTUOhUc0VtAzd6P8bi2YfT1ElON1AMK9tfOUhzuYWcIXHv7Bhe
      rwM9oT4yxJ4KdBIT6tm/t4VPPukmJwiUVtXgcdhx2qwLfj1PNQA9Moh313f46o5KJCPLpVMX
      yVCOPt3DD38R5MiuNaSnr3Ai5sGKBRGQzWZMFhNyOsBnJ2OUWKBJAMkkIwiAKCOLArLVxeAn
      HxAO7mVLvYeh058RcDkQfW0LfqBCxAPdXP7+IHabl827D+CzLs3y30rEyKcJKqX83n/zJm4T
      DF34iMGAwpbqdiInvk/De6/iceapkK/x6a9+gdXuYc8bR7BYLTPLpEYpTsPPmeMhtIROla2C
      BlcnP/re30M2SdXhBnasX8uHpz6l22ymqn03ZeVlGICi3F8GEgRMJhPllRXkjl+g+RstmPp7
      0CxWNm1q5icnfskNs4WWHUdoaHBx7O/+GqtFwdLwFiBjscg4rT5iQ6f5ld+BITgQEbGYZQRm
      6tv8F4vvF60YJXLl8Vf/dJwPr08v+P5cOs7QtU/49fv/BdsztI6FSdJ5+gxjCZVMOkHb3jfZ
      VF/2WKpgMMQ7b36ByxdOL8s+wP/yt+ceXQatby+YdhXNBF8cfG4b29ZWoes6ojh/uVY6aSM7
      6MRiljHLs1UWA1hIT+hi455DNOcURNmCy+lEEn87HwOLSUKWl09qtq6hjJqsTiwE8YhA/drC
      RviYARiGgaatrkniSmN7axVfea2eXC6HxWKZ9/2hUIi/TtzGYzdhNhdu4xRFwWRaWPvnsvme
      +LmiKHgcZirLStA0bdG0ZYZhoKoqJpPpiel0XedffHk7NpuN0dFRJiYm2LNnT8G0jw2B8vk8
      09ML736LPDuxWAyPx7NgvU4mk+HatWvs27ev4HBhYGCAq1ev8q1vfWsxivsYS6kz0jTtqUOg
      dDqN2WxGlmVisRiJRIK6urqCaR8rpdlsnjVxkefDdDhBMCuj5HVMs7TgTyIaVTh5/iprtx5A
      LtDK3+4b59cff8K//tf/ejGK+xgLHbo9DcMwyOVyWK1PntdMTU0xGc2DKjMZzDDlD2AtayqY
      tjgHWIFc65nkw+s3F3x/Lh1n6MYQ4393ClF6/CcODHZi05du7UNYIpHdfPjLn155dBJ8s7Di
      YE5m2n35Ez7++GOOnbpIOFNojT7HaP8YK1fBruPv76RnIj4nLdPLTmVZKRvWzSw1p0PjnD15
      np7hMRRNJxsf4djxK+SesFmYj48xFigsLnvRmJMBJOM667ZvY0O9xLWr/Tw+pckx2D20Yg1A
      z4bpHokyPXSP3GwCplVKcjrK0N3T3OkcZzqtMNV5nuO3+lGU2Tcjc9FhhiazTA910jn8Ys8X
      5zQEkkxWnC4XWlzH4nJAPsXtK6e5OZpi3c5DbF9rm0moK4x2X+bszVEqW3dwcGcr2aleTp+7
      TgqRrQe/Rr12lwt3pwn6g7TsOcruaoOPjp0ikpPZduB11td6WOweNBWOYSsrQ0pFyGRVrI4n
      ryKsLkQcXh+SGCMyOcLYqMiaUh0DneDgFX75aQem0lpaGiow0iF6+kZIpSOUtdkRYhkcdpVL
      Q9fp7h1GNXk49IUvkB29Re/gOJFYmpqN+9hUIxOMKVQ2raWm1LGizuHOqSzBsU4++eVHXB5K
      U1VqIzLexZRpHd9+703UgauMpmfSpaLjdE/KvPet96gzBrk9EuF25wA73voab633EEhr5ONB
      qNjCe+/uIRGKgiRT6qug1CHS2XmL/BKoIAIRPyXeWuqsOkPR9OJ/wYuMoYF7DSbZINvbQaa+
      hXJLhnBsnI9+eQbVXkrgXgfD/jB3bnWy6e1vcnBTMxabB58nQySpYLU6sNltiFqYjz84Q06U
      kL3V7D58iHz3VfrDWRw2ke57A0wslaxzgcypB6ho2sGB/fuxZMNcvNiDtU7F4nQiSlZcNoP8
      feGHbqhYLE4kUcLushPNpxFlLy6rjKLP1GzJZKaitByzWcUq60z33EMpq2dDlY8bAyEWfV/a
      yNB34xbD6gAWPYFc62FzzWbk5Z+nrQhyapq0mkQOBTmfzLOveTv+aQuhwXHyZh8HD25msryM
      ipZa+vQMDV4zE4KMx1uCJPQRno6Ts4TxlNdRIibovadjt7uotYjIkh271YSnpIKaCje+SrCv
      pOafORrA9OAVOgYGMYkCzdteo6wSeo9/xvdvaPjqt/CaW2BaEnE4K7HnP+OH3+/AUVrL4ddr
      mApe54P3f4hFjVJx6CgIIqIACAKiKOAodTN2+iJ+qwvJVbKgvcknYcRGEde+zR/vbUY2slw/
      eY5Q1qDStnotwDAMdGOmQVLSEWo2beagPcR/+YfrGGYTktmDrKtUehU+/vA4SjpDg5YjO9HL
      9//Gj0nIsPFVAVEwYbUo5NIJeu70Y/JV4LU5GBoeRhEcNLV4cbgtJGOT9ESnEBwVNDncOJb5
      +T/PkmuB7l05zkhUQ0llWPfqO7R4i+Pvp7FYWqDW/b9TcBl0uv8m1sBVThw/9izFLIBOdHqM
      qXAG3chjdtfRXFuyaGP++ewDrBgtUF3bFjwZFcnsoNRT3HaYCyVOKxsayxZ8cD2dNJPss7O+
      sQypgAFYkx4CoaXoAQWc3gpEax5BlLDZ7Ms24W2pKaGsRCPm1EhEdeoaHxfswSxaoMXsFGyu
      Umyuh5mjF8WnT2XXuhree7OBbDb71NauEMFgkP83dZt/889fxVzAK8SxYxr/afAcur74Kw6i
      bMZiEe7rdQz0Rdxwe1A3n1ZuwzD4H7++G5vNxvDwMBMTE+zbt69g2oJaIL/fv2iFLjJ/4vE4
      brd7TrqX3+b9999n7969+P1+du3aNev9C8l7rix33p/XAsXjcVKpFNXV1QXTFtQCzeZEqMjz
      oeP2XVKGjbyaxyzO7/Ta93/wQw4fPsyBAweoqqqaVZOzVHodYME919OYzxwgmNQQDRNTsSBT
      /iDuqpaCaYuD8hXIlbsTfHi9Y0H3huNZJEmioqLiiZqclaDXWUr+7x9dfHQSfC1RMN2cmoDe
      6yc5ceIEp85fJZJ9/m41npXw5ORDtxrhyUHiK2wzZjHZs2sLdvuMf4Tuy2e5fa+PcCKLoafo
      unqJQX/higCAkmB4LPScSroymJMBhINJ6lpbafApXL06WEALNEeUKB3Xe5bMx8tsTA4MkLn/
      t3+wi1DmiclfGoaunOT0tT4CgSAZ/xDnb1yibzg6+w35MHd6J4AgF0/fZOk9Ni0/cxoCWewe
      Kqsq0Ub9mOwW8qkIk8EwvV39tOzaSXbgGteH02w9eIQNFQInf/UxftXO3sNfoMGR4vyp04wm
      rbz25h4EmxULCrdOfsztiQS1G/dxcHNjgWN1i4iho2saGizqCtdKx+osxZqNE8tn0YJTVHns
      oOmoqWlOHjvGYERk/aZWrKj4h/qYDARIutbT0JlFVQQGb16hr/s203Gd5p2vsr0yx+XLXYTj
      cXK2et4+2EZoOozJW0NrYyXyUv6GS8SceoCpgav89B//iVM9ceoqnajZKNcvdNC6/wiuTD/X
      +lNU+2SuHr9CyN/DtKmeXTt3Uu6WudtxFe+G1/j2V45SIuUYnQwDAo7SMupqyunrvEVyid0V
      Ria7+OD993n//fe51LN6PF9nhFI2rTUTHInSNxWhrqWaaCbBnSufcHNMx2eKcenyILGhDvze
      TXz1S4fwYFDX6mViNIhsd+LxurCaBTqPf0ZfUieTVGhYu5V1HoXL3UOYHE7Sk4NcjqxULfCT
      mVMPULlmNwf378ecCXHpcg/uLdU0bNhGncdMcCqNo7qZNWtLaVlrwlHh5JU1o0wO3mY63o5L
      EHA77YiyiPygnqfH6JuSaFtbT2Sql6xh4FnChyyp2czXDhzAC9w5/+ESftMKwsiTzMWR8i4m
      B05jKtvNdleGa0Mp4sRp27iLciFB/fYGsveus2VTM1K+D7OrHI9VIp1IkUhNMBGUqCgrIx+Z
      RHa48JZVUeqyoug2ZMFNma8cqbQUxfpirqfMqdRT/Ze4MTCIWYD6LUcxCyDLEggCrsoWxGsn
      ODVhxlezDo/Lw62bHSRVMxvqrdR6azh97EecMxwc/sLOGUcEshM1fJaLly0o+cVfLnsiwsJ8
      Ibw4zAzxjFQAsbyaVw4eRB24S6bCgaop+IQ0OUsJI3cuM5jNIJdHabQn6Pj//oZrTlDK9gIC
      sgyZWJLASBcjfid2xUxkqp+JST+yy41HkLFakgz092OSLdiavFSuJJHPHCn6BVqBPIsW6NoP
      /x0/+8fvsm3bNiRJmnW50zCMeS2FqkqM4YEpDMkglZVZt2kNs/mrWAn7ACtGC1Rk/rjtFtbU
      lCxIC3RrVj9Az4Yo2amorEA1oNrmmLXyrxTqK9y4nBpxa56kVaWmpqRgumIPsAIZGhqiqamJ
      bDaLxWKZV0u9e/du/vzP/5xYLMaXvvSlWd2TzPgFWhpl7kroAVwuF3a7naGhIcbHxzlw4EDB
      tAW1QBMTE4tX6iLzJplM4nQ656R7uXnzJoqisGvXrofXstksXV1dbN++fVa5w3LrdZYy70wm
      g9lsRpIkkskkqVSKysrKgmkLaoGampoWpbBFFkbnnR50swcln0eYJcbXA85dvo5sKHzjG994
      eE1RFOx2O3V1dctiACuhB4hlDQSThXA6xpQ/Qnl9YYfLxTnACuTinTE+vH59Tml7L/Ty1b1N
      j1yTZZmamponDp2WSgi3Uvg//+H8o5PgS4V3wOf0FrRsjO6OK1y4fIPwHOIL5eJhpmNPCH/z
      3NEJjvQwNJ186fwCrVvbSE3NjNQ3PtHL1evdjAci6EBk8h5Xbz85dEQ0OEEivXrjQs/BAHRu
      Xz5HRLdTUWImkXi6kicVGGfAH4LsJNdujj5VO9R76yLRJfSzZOSj3O4dZ6TvHvkl9Ii2XDxo
      6afv9HL+2mkG7g2TUHR6Ln3EJxd7n3jv5Eg3wViae5cuMJZ9MXdzn4U5RIgJEsnVsO/gRiwi
      gMrIzbNc7B6ltHkbB3auw6pFOXXsM6YzVtp3vcJvPIsKWJx2yEa5cOoEw3GBjXsPs7lepP9u
      jFh4AGvjLhwWJ0vkSxWAVCiKpbwSKR0lm9Ww2F/WkZ8Zr90C5izx4BD+kAOffcY4Bm58ytmb
      E5Q1rqXaayMbn6K3f4KYorJ1iw8hI1M10sPZ4QH6RoPYK1s5sqedods3mQwGiaYNtu47hFOJ
      kNYtNK1di8e6NHOI58nTe4BslKzFg/lhSgHZ4aa2tp7waDcTU0E6LlyjdvdbvHFwHTF/4DfD
      jHyEoYk4CBJuXyU1ZSY6rnSjkKbjYge22s2sq3YyPTZEdgnlQIGIn1JvLbVmnaHYS+wXSM9T
      Wd9EMGoQvH4G5649WIwYiWg3P/24G7vbxa1T50kmprje4+fQe1+n0WnC4i1BSUyQEUzY7XYs
      FgvJqW6On7lNOhFDKm1gy871dJ88QRILVinP+d4xXkBl/GM8vSm0VWFP3yCSrafEbKCkQ/QM
      J6huqCQdj5DLZ8laPLR77aiRwvaUjgwzlbJSV13B9FSSHFDetJ62hjKWXEBo5Bjo6KAv14dV
      jWFq9rGpyo30sukhDJ1UPkvCYiU72MHZvIXvHLAz0iUQ6R1ALK2npbkCh60Ul0miadMGKmwy
      ksVNmddFRlCIhqbx903hLPEiSRo5kx23U6S8zoeIBbNJwuP24LZI2AXbS7GC8vRnENw010sc
      /9k/oUkmtuzZj5Sf5sZ1P4IkUytZaXRk+Mk//QizLOOsWfdYFqJsJjp+k1jCTk6bkb1JJvNz
      qYRGfAi14U3++cG1mIwMlz89SyC7jqqXzC+QoeVIZZO0vfkuPnuEH1xIksmDWbQSyYmU0s/F
      S35ScQVhZwv9HXcY6ewildNoQwBEDCVHNh1iYHwUm7uECusUfSNxvIKJ6tpa3B6RiYlxYiYJ
      xV1HZcnj4VBfNOa0E2wYOpqmYRgCkiyBrqHpBoIoIoo6U/3d9E7EUJUs7ppN7GivBAREwUAz
      QBQENE3FQEAURERJwNCNh0txuqYhiNKi+wR9UHbdEB6eN9B1DUEQV/SRwPlogfou/oKv7m3i
      T//0f8fQNRAlMHTyeRWz2TSj+UHAQEfTdARBQBRFdH3m9xREAUmSMO57WjAMHV03EESN4MQk
      qbxBLpehtKaZSrf1N8NbQUQUhIK/2UrYB1hULZAgiI/Ge5JkxIfzHwFPWTV12BEsDqqrKz+3
      xiw8bOVl+dFtd+FzYx9xiTZkHpT98z2NKK78iZvDaqKu3D0nwdq03YzBTDrhvg8gAxFZlh5W
      9hlEPv+aRfG3GoGHHz74v4631Icpm0cyVeJy2RFfoAMvlaVOzBaVhJwlJeeoKi8ceH0RhnEi
      dm85Ld7yZ8+qCAD7N9Xze+/OTQv0f+RuEY/HH7mWSqU4ffo0b7755qxaoKfH2hKxOT3YXtBR
      zr/9/YNFLdCLyny0QIoy45n485V5oVogv99Pd3c3R48efabyF7VARZ6JO3d7kR2l6Pk88lO0
      QIXa93wuxLmLV9mx7wiyqfD9ei6H/FsRKAfHbvLDH/6QP/7jP15o0YGlM4D5zAEyqohstpAM
      J/EHY9S2rC+Y9mVYyXrpOHd7lA+vX1vw/TPOcXvp/X9+XdA57mwEBjsxLcL57JWgM/rT7555
      dBJ8Llww3ZzeznD3FaYSBuBgw64NOF+gydAMOuHxIVKWSurKHC/5kciFU1FWQrW3FYBsPEhv
      /yTe6iqqK3wY2SA374bYsqUd8ywBsNV0gHDOQ/kL5AF8TqY6PjiCxePB43EiCSm6L3bxBPdK
      cyIXmqRnYsZDgxKb4Pq9kWfMcXaMfIxb3YMM9LycWqDF4vOrRonJKa6c+TlXrg0QzKgE75zh
      /WNXyeZmV3Zlwz3cG0kRGLnNraGp51XsZ2JOPYDdU8Xa9vb7gQ3SmN0uLMDkvctcvTuJb+0O
      9m6owj80QS47xZRWw6Zag4vnriL4Wtm7q43w2BDTw4OMpWD7vn1MnD7G9bBBZ+MG3tlZh9vp
      gFyAG50jTPvHkKvWc3h7E+O3r3GjbwJf81b2bFt7X480P9KhCObyKqRM7CXXAi0mMqUVPkQj
      Tsg/ib9fobXWAgbEJ+/wyckbmEvqaKgtRcgn6OsdIpkK4Gx0Y1dU7NYQNy7epW9oDFVys//o
      EbLj3QyPTRKKpqha9wrt5SLBWJ7KxhYq3c/ZOcJ95lSd/P2X+Mfvfpfv/vgEKT3N6MAkSrKf
      KwOw/9XDWMc76IllGe7qYDjjYstaFzfOXkFzlJIevUvn8ASTg8M4m7ezZ0s9E0NB1u/Yzfb9
      h3jn4FaEbISR6Sjkw4xMG+w8cAAhFURRNCSLnfKKcoIjnYwFF+bSLRCdptRbQ43JYCT+EmuB
      FhNDw3C0YDZrZHqvE61qptKcIpaa5JNfnSRrLmHyzlUGxoN0XDhH1a4jbGwoxxDMWOUwk8Ek
      JpMZ2SRhqAE++skJwukkkZxEy7p2Qtcu0BfO4LCJ3L03wISyPI85p6awas0eDh04cL8HuD+Z
      SEUQyurwujxo5TIDSQOLq5INW9dh16aJ5Mw0NJdjrqjA63MzFi6nudqHktWwRTKYzCakvBmb
      xfSIq8SyuibKSty4HXaEVIhef4KKijLiiQhKTgFs83tCI89AxzV6Mj1Y1QiWmI8NlS+hFmiR
      yatZUkoKPRxhJK+yZd9GgmET0wPjRPJmtq4pZUrcQG1dJcOZtaytKiE46cDnqsAijxINxshF
      g+iiA7tTIBQx8HpKkRxlOM1u3DYRi8WB0+VgjcuEa5lGpgsfC5S14774a346KqBTwhsbJYaH
      zciSAFIp7VUiV7u6cdoctJX4Hv9im8zk+fP8bGwNr7fO4mNAkhEzYXp6o6j6wlYnjPgQSt0b
      /LeH2jAZaS4dO0cw106ltWgBTyKXDFCxaTOv2kP85Q+voJstCJILMZfC58xz7XoPajRCzm4i
      Nd7Dj3+QQMoHaTl0GBAQUchn04yOjSF6PFiw0T80jIKdxmY3FqtEKhVmSkmimr1YPKW4nlqq
      xWdOWiBVUZBMpvurJzpKXkc2y2hKjnxeQzSZsZgkNFVDMskIgK4pZHN5QMJsMYOh318bNtA0
      A0kSUHI5FEPEZpbQDAGTBIomYJIFVHVmLVnN58hrBrIsIcumefsQNXQVVRcx3V+50JQ8yCak
      l0QLVIinxQibjeDQbSzTlzn+6SdoSh5dlDCJBtmsimQ2YWgaoiBgGDr5vIIh3JdcGDqKqiGK
      IiazFQEVXQdD11BVDUGSSEeniSQVDD0LtiqaqtwIgjAj9xAlJEl6qjJ42bRA8iNb5iKm+4cD
      ZJOFz0t8ZNNvshMlE3b7o/fNIDw8/GK22jD/1qcPsniwhW+yWHmWRTVBlDF9XsY0y8bQSsJm
      kanwOu5rgWC+vuyyJpWA1US5144kFX57hXRGisNC+nPhbB9sZVlt93+Uz21umcyP9tqf/5dh
      mJDvx6GduW4gU4IuZjDEErwlJbMupS4WpW4biCYSRoo0GSq8hd3WFZdDViAHNzfw+19emF8g
      gEAgwF8Kffzb/+ndgjHCoLBi89gxK//hP5xbcLkf8LjOSMBsc1NhKyxIWwr+1z86UtQCvajM
      RwtUiN/WAvX29pLL5di0adPDNIXyVhSFTCaD2/1sFbWoBSryTNzt6cPhLSeXy2OxzH/IlguF
      uHjlGvsOvY7JbOL8pX8gFY/w7rvvPkyz3JV0IcxnDqAKJsxmC+F4hmA0SUv7poJpi0OgFciZ
      WyN8eP3qgu+fmQT3cNf4EFGS6bvUxRd31DySZin1OitBC/S//c3JRyfBpwIF083JAHQlzdjw
      MOGUQkXdGqpKHUt/lncRmRq6w2RUweIqo6WxGssST8BWGmub6qiurgAgFRhlOKTgK/dR7vOQ
      DA4zGjGxsbVm1vuTsQCCuRSHbeUfJpovc/IL1H35FL3+BKJgEPBPklvagC6Lzm27BPcAACAA
      SURBVNjdu2QlgfhoJ2dvDKCsMjmQJIkPW2V/ZyefnPiYO3cGSag6PRd/zo8/vfXE+ycGOvGH
      U/ReuchI+uWKMPj0HsAIEUhVcOALO7E+MBdDJTDQxZXuCWrW7WTrGg/9N28zGQyQMldzdP9m
      9MQkly/dQHM38sqO9RAa5HzHXQRHFXv27sJjeX5diNVVyZrNW/CykdtnP2Ui3kyj5+VrzeaG
      FZ/HiiRniEyNMDFtodwzUw3Gus9z5Y4fb3UjFV4r+WSIweEpIqkE7Rsqseh2yqaGuTYxytBE
      CIuvkb3bWxnvucN0OEw8bdC+YzdOLUZGM1Hb1ITbsrLf8xwcY+XQBPPDIU9Px2Ws5Q4+++Ak
      abPMdDxLRcXrhKKwafd+Ah2dTGUnuXdzmj37DkFiggud/ayzTDMxNkYiP4xhq+CN3Y1zEyIt
      KgKyLKKtWkWogapkcNc3Mz4wSaTvLmte20/obDf+u+f4r+8fx2w2yHePsb6tCsViY9+Bg9w+
      fRpfeRmTt86TM7yMdN2mdyxI3rhLMCux2ZalpK4Or27m7slPKF/bgiRKBHUHr7RVsZL9Zz3d
      AKRKHPp17vSX0uSzEI5lqa+upLxtE3v37cDIJzHLM65PHC43abOMKttxZAJMpeqRp4OYpTLG
      IgZvfOUbpPy3GU093zGUpmRJRKMkJu8ykPFx1L065/6GrpLIJ3G1baAq2MPHQ2Z2O6yIopV4
      JERF3UZef2MrY10DVDZ4udU3jYxGRlEQzWZkWUXRTZgcNRw+vJlYdIxoIkhClnAaAjanC7Mo
      UNWygXqvhUDaWIZGbn7MoSaY2HXoADeuXuf0XYXmDbuoLC9lR2uIS+fO4apsYueOCmrqK5AA
      V20tuuymYu9GLl+6eH8I1IoREjh/7Rrehnpa60ue66EUm1PnxpkzOMubOXJgPS/hXO6JhMJx
      EgkbGFDZ0k59fT1O1+tQE0OWS9i+ZR1Op4mj9hFuX7mOZPdRaphpdEtcOn8VX1MbPpcVS+tm
      DFnAbWQZmIzgq1lPk9eMEk+j5VRMJVa2HNiFmg4wGAN7RT0rYEHoicxNCmH38crhNx65VtO2
      g5q2HQ//7WiY2Whw1933DOqt5chbtZ+7YR1vF3Ca9Txo3fUGrcvyzSuDYCRKPG5HkEzUb9wG
      gOFrYU/ZTDNUfl+sWEMT67Z+/s5H/kGZe+b3a25pZycAClNDA4xlFMyOEmoqfLgslfOOP7ac
      rM6xwApn29oqtmxoI38/jNF8q1I0EuZHyl3+6PcOYDKZ+L7ShSA8unqzOJXURGVTO5VNj15d
      CQbw3727A0SZyYkxpqf8bN2+q2C6xwxAURQCgcKbBkWeDw4zeL0iqio96pBsjvjMdl7dt4PG
      UhlJEjm0ewupVOoRiYuqqrP6DHpWljLvuewyp1Ipqt0WZFnEhZsqJ9R7C7/Hx0opSRI+3+P6
      /SLPj2w2i8/nI5/PzypmexKiKDI2NkZJSQkmk4mvfOUrj6VZaN5z4XkZ109/+lPOnDnDX/zF
      XzyWzuFwYLVayWazRKPRWev0Y6UURRGLZaUHwXy56RwM8P75CXRdW5Arx3QiyoXLPag/vjKr
      HHqheX+epmov7+xZC4AkiljNM/mZ53EGYb58Pu9oIk00Fn+svkqSxN9/cptkziAa9BMLBzg1
      UNiXe3EOsAKZjqS4eOfZDsSMBeJcujM+rwMx8yWdU3htRzMAJsnAYnq+y2t2mw2vx1Pws1v9
      U49ogSbVsYLp5jTAHLxzlVCBs+RaNk088wJsjetZbpz8JSevD6Ct1j2wpcZQGO3pon88yLG/
      +4/88ubgzOXcNL/43l/y6yuFKyAA2QBnLt4GsvjHpplroCav20lpaeEA2HNlTgag5HNohoGq
      KOQyadLpDKqmkxgfoGt4klQmN3NMLpshlc6g6ga6rqGqKplsdtl3XtVEkKi5GmvWT0Z5CcKa
      rEC0bJKs5ELMxbHabQT9fhTdIO4PkLPIGDkFVcmTSadIpdLkVQ1dU8mmUyRTCeLJFPl8llQy
      g24Y5DIpkskkmWwOHYN8Nks6lSKVzixqfZpH/5jlyonPiGQ0Erk0TVsOoXVd4WZcZnJiA69v
      KuPmjVuEMzoVTVtpa8py/VgfKbebg/v2UO5evnlFKBzHV+ZDCI0Ty+RwmufpWaLIU0klJ7G7
      GyAZQrWV0aSPcnVoA6WhfnTDST4R5uaVu9y9N0Eym6V8zQ7WOEOcuzGOxwn+jJum6hQ3ruX4
      ckspp//x74nJDhIpM1//F+9w8u/+noS9hEw0xaHvfIet5d5FKff8Boj2So4e2Y6SnGBwUqV1
      70GsipsdTZXcvfAB94aCWO0y6sQEDTUlmMtaOHJ4HRZpObcDdfxDdwhY2vAmJ7g90kLNZlvR
      PeKiojPddRPnhgos+RQJTWDrziYuddwinshQ1+Kip3saffouExEZl9UgODKO1Zrm1T/6Y9bk
      R/nZr2+i5BVyWpZsdpKEaiKnpAmN+QkpKXSLh7b1G8gO9hLPL54TofnVTMmEWRZ/E81FUImF
      YyQzWSz2Etp3Hua9r3+dIzvXYpZlysrLlrnyg6GGGA/I2M15KCkjOzhEetWK4ZYGIz9Gr1/G
      JOmIDge6pmPytmGfPM+wqZY6lxvZZMblq6R9xxHe+/o3eXV3G14nTI4ECYTGiBkltK2txSwL
      aMTQ7Gt490tv0lRmR5dkrM4S1m7YRGt9AzZ58ZqvOfUAJRW12EwyNTXlCIKA2eKkvEzDVurD
      23+BY5dSfHnfNqJXLvHrX3fRvGkPrXUllJUtj7u7R8gorD30Om3VM15n6ga7yefBsQKK9rJg
      JFSa9n6BxroZOUwqnMUuO1i3/QB1rmZ85Xl27bbi0MrovtfDZyfuUrtmCxtffYPbp89wWbPQ
      VFPGWECgff1a3PYW1rp/wanzUSy+Ojyil3VrGwkP96GIJsrsM0PYeDJFNBZ7prLPyQDKa5oA
      cDbOaHssdg/V9pnPth96k+33020/+MbDvwFc9mcq26IguGpo+5zHparmwn7iiywc0dfC+orf
      9PRtWzYD4N1x8OG1dV6AaurbHtUXHfnKtx7NrAV0LUl5Qzs2DRylNdRgRdy+7bHvjUQThEKF
      3Z7PleI+wApkc0sF7a1rUO5rgeZLLBLmJ9k7/P439856/0Lz/jxepxW3Y2ZxQxRAeuBv0mC+
      roweQZJctG/bXvjDz+XtsJmRZpGb/uHbW9EFGf/EGIFpP5u3zUMLFAqFFlTwIouDxyZRUmK5
      rwWafxuVcrqJ7N/BumrbrLqZheb9KAaxcLBA3s9HClFVWc6OHdvx+/2PpEkmkzT6LJhMJsrN
      pcRKJJoqC69CFtQCeWbZXSvyfEilUng8ngXrdf7sz/4Mi8XCe++99wQDWLpKuhi9y2x8/p0c
      PXq0YDwzTdNwOBxYLBZSqRS6rs9apwtqgWy24jr5ctI9EuKDq9Nouoa0AL3OhZu9/PG3v4zD
      4ZhVlryUkmWLxbIkrlEelPlpfoFkWeb9E3dJ5Q3CQT+x0DQXRws/a3EOsAKZDCU5dXPhWiBB
      tuJ0vqDxTReJq/cmHtECjWTn2AMU4uSP/jPDORcmk5sDb71Fo/cFU4saOW6eOU7MvYEDWxtf
      +tgADbVVeL0zO6XXPvh7bqQ97Nm1i/XNXi5++D1GnUf43dcLe0tGTXPlejebt20iFY7hqKrg
      ZV4xnpMBeGu28Mr+fYjhO5zpGKbm8BrQdBBEZEkEw8DAQNdBFAV0XccwDERRRNd1BFFClgQ0
      VUU3ZiLDi4LI8zo0pCaChKQK7OlxsmoDDtNLbgGfQ1BEkvk8plyUcEggkkmhSCpgoKkqmv4g
      ajwYho6ez5FIplDVPPFwHFOFD1nT0e+7MZdFAe3+72sAsiRhGAYIAqIgLPtJsPkyryGQrmkg
      SQT7rnH2xiCq6GLP0YOY+zq5rcbQEj62N+X4pCuEJZdEsrow6Slytja+/m47F3/1GRPpHPba
      jby9fxOm59QUh0IxfOVlM1qgdBaHZ/XMcXTBQoOYZkgVyA9dx+5sIJxPk0mO8+GPfkU0Z6Bb
      StnWYuV8Rz82m4nJmIjVCf3Xp9lkxBm9dZW+iSTWyrUc2FjG9VNnmcoJiBYHW7Zvo9pjQ8NM
      SUsLze4X693OPUbY93/ALy8E2bq9DlQDDI3k1DADUzEgi7d+F2++uRsnJjYffJvf+eIXaWxs
      4N2vf402j0g+r6JJM35punv6ULXnpco0mB69RySWRs9McWcszmoSQuQ1nfL1tQTuDNHfF2XN
      jkZSuQT+O5fpGIqSzSaIhqJMTYSp2X6Ib37zPdqratmwsRW3Q8Iw8qRSCpqSZ/rubSYFH81r
      NvHWF9/h7aP7iE2Mk1M0lGySoUB2uR933iwgRliGK2MZDn75ayRunmWSmfjB1bWlmCSBDCJm
      s4wgylisZkRRQBQFjEAf6er9fPWAxocnOnletdDQwoyOa9gbI6QtDuL9Q2Q2VGB/wbrqBWFk
      SOp5nL5mPMl/oFfczptWCfKQSKZp3fYq77xSwtB4khJjii7RCUqWtC5gkkQ0LY9gMjDMDRzY
      62a07y5KJolsyIhoCKKM2Wqjef0WvLLCVObFW1OZU4nLqqo+l9DGmjYvxz/8BRX1rdSWOXHa
      K9HvVyhzSSWlFhFJNFNWWoqATFlVOaaaMnydH/HppJu65uaZWGLPg1SG5sNvsb52Rg8x0X+b
      bA7sL/HMbjoYJplMgqJR17ae6uY1pA5+gaq8A0XwsGuTA4ezlvViNx992o2rrBa51oe57yq/
      7JGpalqHSbKxdn07VkTKPcP0jCaprl9PRalELCWTiOWobqxl03aZqf4uJkQr7rrm5X70eTOn
      GGFFni/PGiOs48P/zP/833+bf/Wv/tUi7wNk6b99j2hOxeQso31tfUG1r67rS7YPsCwxwoo8
      XzY2ldPU1HR/R1VmvsKaP7/5PkvTrllZs2nr05OtAL7zhU1oyExNjhGcnmLj1p0F0xXUAkUi
      kSUvYJHZKXWaWFvqXLBc4Y0j+wiHw/j9/mWRQix33slkkvZqByaTibCzgkiZiTUNhTcGC2qB
      Vvsu4nITj8dxOp3kcjnMZvO8hip/8Ad/wJ/8yZ/g9/txOByzVpal1Ovkcrklca1jGAaKojxV
      H5XP57HZbFitVuLxOIZhzFqnC2qB7PYVIORfxfSMR/j1rfCCYm11dvfidDr5xje+gSRJy6IF
      EkXxqeP0hTDXOUAikeBn5/tJ5w3CgUmioQDX/YUbguIcYAUyHkhwbIGTYJfLvWTDjxeJC7dH
      H5kE9ycL9wBPn6obCnfOf8wPf/AD/ukXp4jkF2cDa3y8j0Ag9cQ0SjZFIv3smysDHR0kHvx9
      6wwTiScmf6Fpaap/OET49d/8R3780UkG/RH0rJ+ffPe/cva2f/abM5Ocv9oH5AgFoqjPp8jL
      ytObitwI/fFq3vv2F8hHplGNxek28/k0gvBkY1IySeKqFdczLtpnUikehOTIJmMIL1iMs4Vi
      MXIMhHLkkzHC8RAJScWTeoJHBT1PLJHhgQE4yr0v/RDh6c9nqcGb/5BPj0doatvAep9Kz8WT
      XOnzI5fU8YXDe5m+fpLOQJxMKonLU0UuNo1741G+VD3NX52awK4lMFWv52uH2um8cJo7o2GS
      gpk3jtTSfelTbvROIljdvHL4TaTgVfoG4sStlbxSZSJo9VEmBPnV8cukVJnWHft5ZV3tvNxZ
      pCIjXD5rYAeC/jhbNyz4fb1QKHIZNcI0o/FGQokJGp0OMvkc4bEOPvjwAqmcgru2lXprhKu9
      01jIEDO3UO6Zpvtqilh6gr6bVxgNKfhadrK3VeSzD0+RFkxo5jLeeHMXsqJjyE4aNqyl/Dm7
      RlwMnm4Ago19b73D9JSfwa7L9HleQ5ckZFEkMDKEP7YZweTl0Bdfx5Lqo3/Ezc434OzdPGDQ
      +sobHG4RuXL6GqHpSTK+dn738BqGB28hZdJMZU38zrf/GUqoj1v9Q1TYNUqatnF0Qw3Be52A
      ga4LmEwiejJBX98Q29pqsczDAkxWN9W1tTgBPfmEIcBLhUHOMFHRVEJgaIgIsKm1jCtjSfqu
      nmU0nMMl5wgFY9jNMVoPvcvBijgfXUyzZWs1fdfvAAqKJoCeZ+TmTbbt/iptG3dR2VCHFp1i
      cCxAY3kpWiLMQFijvPJlNIBsgOGATGNtI/p4NxPhaaIpH1/95gE6Tn2GoOsgmrCYJcS8CZvF
      jCiqSPdXGERRQsslCWdytEkCiVgKzdBJJZI4nT6UbI6cqpJPRtFM5ZisTqpKy5AfBiLWGe0b
      p/3QFynP+znbOTlvHZHZ5qW2uRkvkJnsmt/NLyp6krSoU+WsJHnzV+Rr3sVtiaJHU6RNInve
      +B02e5JM40EfuETE7UHLB1BlM2ZJIJ3KYbIbOH0bOdwO3Td6yeRySJIZQQBJlrG73WzYug2L
      miaov3iVH+ZiALKDSO9nXD6TpHTNDl5vqmUk0sdPfvQh9W2tlDhsGOVlWAQBweympMQKkkaF
      zwRMc+v0zxh32ti+/yjeagcbg+f58fs/prSphV2NPvY6Gvn05/+EXN7G0cNNZIMC0v14rDZv
      CT7RQU1ZIx8d+yV3S1poaqycd5Bub0UF5od/17NEbvFXBNPBMKqqYmRyrNm8lY2b2jFHYtDg
      Qzbb2b4OzKb9DPZc4MOOPJUNLVS6Kwmc/4CPZQc1a18BXGzc2oSY1yDXRfekl9rWVuxaiowF
      UmmV6qpabDbou90BZhcVLWuW+9EXxNJqgaY7uaGuY3vN0my4vKw8ixbo2g//HT/7x++ybdu2
      Rd0HUPNRerr6SetgL62lvbmK2dr8bDa7rPsAK0cLVLGZWby7FHkC6xrKqKmtQ1FUZJM8LyXQ
      v/nF0shcZbOXDdsL62lWIt94dQOqITI1OU4oMMWGLTsKpnvMAFRVJRqNLnkBi8xOhcfCel/p
      guQKrx89RDKZ5Lvf/S5f/OIXZ91JXkopxFLmPRctUCqVYnODG7PZTLBEJxKx0tpaWjDtYznN
      xe1EkaXlgZRAFMWZKJFPGKp873vfI5VK8S//5b8EZnwCJRIJJiYmsFgss1YWSZKWrJKKorgk
      8ccenDN/Wt6ZTAaLxYLFYkG6f2Z5tjpdFMOtQAb8cU7eS6CpKpIkP1ENfeziHdprnI/8Zg6H
      g29961vLpgVa7jlAKpXioytDZFSB0NQEkdA0XeE5GkCR5WdkKjbnSfB0OMO2NeVLXKIXj1Md
      w49Mgu9GCws8n7qdpIfvcqXvwUFyla5rl0ksXnyC58JgZyfJ+38P3T7PZPKJyV8oqivLKCmZ
      iZM1fvUYf/u9n3K1awDFgP4rH/DXPzr3xPuH711jMpQlFYuR1Vdf+KinGoDoqSQ9eIeMDqSG
      8Wd82F6wVc10PP5Q2JWOh8m+pCqvTFRAE0JokQiRjMJYfz/x3JMfNp2Kks0rhCfHSairzwCe
      PgSSvJR6s0RjWaL9Q1SsP4IaG+PM6ctMpjSatuxnv3eCn3VrSOkg23fvovPsKcIZFVfDZt7e
      6ORX57pQ03FyplLeePMo8Z4LXO4ex+Is58Bbb1G1xK5k0tFxbly6hB0ITCXY+NJqgXTcJicR
      WaV04CwhcS1eLYVmpDj543/k3lQWXXKybUM1vd13SOoy0ViKHbutJEf9rMmmuDF4j9v9fixl
      9ezZ0sbwrYsMBpMYokzzul201jhQdRFPwxqay1yz7gW8KMxBUSPgc7gIhCYYSDtZ6xWZ7rnC
      rdEYWjbGve4hcrqGai7j6JtvY/V34dn5Nr/7u+9RnQoQVBXctev5yje/wyvtXpSsiijJSCJE
      p3oZms4s+UNKJiuekhJKSkqwW17WaY+BruZxNdYTn4gx1DVI0+42BCFNZLiTEzdGUbQc06MT
      BMNRdE8t3/iDP2Rncz3NLWupKJEwBFBVHQyd6Fg/nWMZ6upaOPjmW7zz7pfQx3tIZFV0JUvP
      eBTlJVDVzqk2VNaWcv3CGL6KEiyigGRxsvnAPl7dXEY8mkRK36W6oQmnRUa3mkjGUmhVAklN
      w4SAxe7ALInIsoyeSTOaEHj3va8zfv0TAurSv0WLw0dtWxteQA32LPn3LQuGRjyfAmcTpelr
      nAu4+R88JjqxEPNPUtO6l298dSvDXUOU+szcmkzhkjSyOpgtZgTypDMKacXFwYPrCAf7mc5n
      UAUzLrOAIJoxmSw0tG2izmMikFBYxFBdy8acDEBy19LoGUSqqEdAoLL1FUbPHOcfulQaN+9h
      X62PMm3mbbha91B59jN+8rM0a3YexOcQKFNn1m0d7lLMThf1QZWf//xjmhvKKHMufYvsKSvj
      wbTFXVaD5QWbwzyJRDJFOpPB0DRc5VVUta/D6VZQu6IouoO1zQ0Ibpldzb38/EcfINl9tJmq
      MYeH+cH3+vBW1+G0mqiobQarhOZSuN7RQXn9GtY0OsgFo6ihFBV1Ptq2txEbu0dgSMBe3YLP
      vdxP/+wU/QKtQOajBeq98HO+ureJf//v/+zhNcMwHp4nXvg+QJ6J/n4mIykEi5PmNS2U2Oe2
      ubXc+wArRwtUZEG01pXyhxXVc9r2/2noyhJ52TZTs2Y9NUuR9XPgKwfaUQyRgH+CUGCKdZsL
      +zMqqAWKx+NLXsAis1NdYmNLefmcNDWxvZtIp9OEw7+JlphMJjlx4sSyaoHS6fSy5Z1Op3ml
      1YfZbCZQKRIO22lvryyYtqAWqOhVYHkRxfsLBrqOpmlP/MFfe+01FEVhfHz84bVUKsXY2BhT
      U1OP/JbXrl2jrKyMpqYm7Hb7Y6LHDz74gL1791JZ+WhlmW2ULMtyweGILMsYhrHoBmYYBrqu
      P7V+iqKIJM0EAXzgonG2e4pzgBXIp+euM5GUUNWZTaxcLv/E9Jqmks//Jk06GefsJz/jP/1f
      f47F8ptxeyIaxutxU1rindEX/dYvn8/nsFktM/qjJ2Kg6caTZdqfG5flVQ1Nn1s1++RyP6ns
      LM9rgKppyPJverWvHGjH63zUCKempjjZOUlOEwhOTZBLRnjnzdcKZlls6lcgg5PROU+ChVx0
      JkKPdUYOgZLGaqTJahLJTO6RtXpVBwQBzTAKHiudmRQ/fUJhGPf/e1qi+2RzKsoc40F8dKmX
      QHSOw6d8kiZXnsP7X3nso0+vDjycBNvFLE3tj4dzhTkaQCo0wuVLVxmP5GjdfoQd62tYUJSh
      fIiu4TwbW6tRYhN8duIUk4EUWCx4m3fwtUMbH0luaCp5HSymx4upZtPc7e2jbeMWzIvviPiF
      QYwPI+h5VOtMJRCzQeq9OnUbmrCbQBbSjPXc5t54im17DmC3WTBJIt0nfsqdbClrqt2IokBo
      9C4heQ2vbqnGkM3YXW7SgXHS2HFYJcxWK/6JSda0tqJlc4h2+7K3nlLaz7GPhgsawOMYqJkI
      Y3c7iCSzlK3ZQ221by7PkOfGxevU7XqDV8ttRMIRDB0WtAeu5YjGZxxdmTw1vP073+Tep2cx
      HdhHi+1xX5K5wP/f3pkFV3GdefzX3XdfdHWvpKt9F4sRBoMIYgtxIJgQYxKTOE4lrspTapKZ
      l3lL1fg5z/MwNQ9T8zBTNeVxbI8NntixzYxZDTZmsRCLJSGEJBDada90t95PHmQWgUBXYAph
      9e+p63b3ued09ddn+f7n+65zMe2ipanq3uZYFolkgjx71kWLqWdJi0KqglPcKQsyUgbj5Ni5
      fDNS+jptX17DjDYSLSnH61VI3LjCqKYgGVmqqxvQJwa4MZ6krlHjRnc/0VXLedqySWu5HNGG
      9dSE3Vy7dAa1eFMeBqAPoAabqYu66Ok8j+ktxedJcu7rc4zfGKds9QaUoXOc65kgVNLA9h9t
      5Mrhd+hKQi6RZf3Lv6ba6uXgkdOkcmlEWSubZ/sfYTPW087hUxfRpQArW1uZOvUpp0YMLnWs
      5KXWOk6f+IyhtE396udZVx/+1h/Q04pk5JDTN6aP1QTc8Wp6/DFWrIjRffLajHtkX4gmj+B8
      Xx+B0fPEK5cwiQcjM8TRvxymc3CcgiXrea5Y4cM3TzAyOcawVMfGlno6u7t5rrGUMwfep2c0
      h+mv5qUXmjn70f8xZAgM3aJ0yXIaSyIUxOuJhXSO/O8+BqYM1LTC9j/8BvXkAc51j2L7y9i2
      64fE/dNzFTk7jJzOL3SfpE3CPHJYBqIVIEzSYwMooQo8rnyGQEJgCwFIKIqb/p5OYoWrSE7m
      WL3tJ5QGoXPUjSLZjF5tY2ByI7I3yqYdWymd+JKTKYF38DrLd/yMJs8Ex7/WZv8fM8fF/gTP
      736FkDnO8fZe1m3ejj873QOok4O43G6wEnSd62RF/bq8G/6dR5IQkvzNYb7jQReNK0o4dXKI
      mJYj2ljG1BCk+7/i2IVBIkGdy5+fp3JNMa5nd/DbOpP9n1xCS2XJThpMDvWSzFiAYOTSBfo2
      12ISYsere/EPdvHF1QEQJuPDI7i1IbTCDbzyUjkn932MnevnxBeXUAqLUK99zZXRDcRrvpms
      S8qttuTT7nk8JBAGietdZOUoZTUVuOS8IsNV4kt/Qv9kBQ1NS5kYGQdkomXVxAt86MlRho0A
      e3+xl4vHPsA0we31E/B5prfzGWDbBroJplDR7qegkiRctoFq2vgMFctWkDDJZEws22Zo+Dqx
      +k1s2KJz6MBVvgM6rG8N4fIhgmXTx7YOzD3hFLaF6q+iVH+Py/JSWq1JsloQ4QuxatM2agM5
      dFOQGulkanyUdHEA7CnGMhNYsh9JzpETNfzytVZOvbsPW5bx+yMUFvjIDGbxVdbSvKSUy11j
      CEXGMAxs00LVDYTioqB0GVv37KbATJB2hUGefhVtfzEimF90cmGkgft8UO+9mvRwD7qvgsp4
      9NZUP485gJd1m1Zz4vhHnEiZNKzcSMjrJlIQRgI8oRAxkWTfB4epKS2hyAtKYWx6kuyLEnPL
      VDY/w5H/389lT4iiujs9chKhkmIURQbFw9rnlnHo4H7ScoxNP9hKKKDic+hQjwAAB6dJREFU
      uXiUtz4Z4SctVXSeOErP9TLKy2N4FIWiWNG8YwR91xCeAhC3B/fC5SdlGqQnRjEtULM9HP74
      FClDR/Tshxd2Ux8FqSCGSCYxPFGKAgFKKsspm0pheMqJZM5wuidHRdM6nt+5i6MfHOD9Pg+x
      ijiqFaZuqZvyqloqw3/hf97eR8Qb45lAmEBlKW4gFK4g0HOVrj4XwXAQf3Q5hbn32ffuaaZG
      dJb6alnffJVD+99A8sVo3b6DoodpuztIbUN1nheDnksw2N/FYIeEEqqgaUmD4wdYiDxqjjAt
      O0XvmQP817/9Mz7f7cUFLZ2kOBahuCg6632WoeH3+eZ0NAkh8l7XB0gku/ngzQOkAG/xMl7c
      tZn7pc94/d8/zX8ZFPiXf9xFTXzmdPxuLVBAVvnVy7tmvf9Jr2Q5zEJjRZRfRePTjjAh0PQ5
      HGGmOeOaTMqHfD1ELOyZ6QgzXXjdMi5FQkJC3LWSb5tSXsNqSeJ2z/uAG26eKSho4NXf/d3c
      BTPt2Mqo99lze1Pkd4eBRoKzm9Ku1iY0W2Zs6Aa51AQr6+OzXnePAViWRSr1HQ6g/xRQVRxk
      bTyOYRgIIcjlHrxpSNd1VPV2HoVMxo80vpxscgT9AVKIuyUW85VCKIqC33/vdj5FUfB4PA8l
      qdnaPLtm5yZ3a5iEoZJMzswhoaoqW5rL8Hg8jIx4GB8PUx2bXcl6zxDINM3pHLMOT4yRkRHi
      8fhjTTb3NAbGuinznuuZJJNJ/H5/XnnK7inJ5XJRWFj48LV0eGSSySSFhYXouj5nYKyH5XEl
      snucZeebJE/TNMLhcF657haxiMDBwTGABc3jlKU/ruHP4y77234mzirQAuamlt0pexpJkr71
      4aDTAzgsapweYIEihMC2TAzTxuP1zvB4C2GhZlWE7MLn887pDRfCxtQ1bNmD965EdoaaRTNt
      QMYf9N9KbZV3PW0TNadhSzJen+9WaishBJahoRk2bq8Xj2v+8mHb1FE1HSG78fs8yN/UTdgW
      mqpi2gJZcePzex/6S+4YwAJFz47TfvY8Q5NZWn/4IvHgzTM2Y52nOHj+OhIKq7bsYFl56AHb
      WGzG+7/mwsUOMiUtvPi9uhlnv/zoDfqsYvxKhC0vbqXEM59XQuPK2dNcvDaMYdpUPbuZDcvL
      AbD0KY5/8jEjqoQ7vow9z6+e50uapf2z4/QmUui6TfP3d9JcMa0AVscH+PDTgyjeCOGiJjZt
      fZb81EP34hjAAsXti7CiZQMFXWdnntDTnB+y2P3Tl7ET1zjX38vSspUPcMhKRErr2eD3cHrs
      7qXJLK5wM3u2byL0UENrFxXL11C7xocxcpmzY7eFadroZezaH7B3ZSGXDn3GgAbV81oZ9bCk
      ZTMrgz4yPafpUG/LH1XdpH7VVlpWNDxMpWfgzAEWKLLiJhjw3/NlF6aBOxTG55LxBULYtsaD
      1VwSbl8An1uZpZfI0N/Zznv//SYHvriEZs1XFqbgD/owp67T1pOmqea23ECoGULFcRTFR7zY
      YmLegUZcBIJesmNXOD/sZWn5rS4Q00xw4cinvPHWu3zVM/pIm6KcHuApQ5IVdFXDBizTwqW4
      89nGex9KeOUffo+wdbqPHeDCSD0t5fOLVJwZukLbgMHa1jUEXLe/p5LLg5rJIAiQTbsIBR9Q
      yH0Y671AdzrMhs2rZ7yoJbUt/PYPa7G0KU4eOsZA6W6qH6J8cAxgwWKok1zrHaR/YJAJ5Qru
      hmpQE/jDUWrdKU6cbcedGcZbsWaObtxmauQGg319DE546AhAY1mYRE4QlxMc6xynKORiaFKi
      LjjPiaqdou3MZbx19fR3d+ErLKOqQJAw/URK6lEPHactXci1dICd840Abo3xVdsAJcvq6e7o
      oCBeQ7E7S0ouhNFLdE1AxK2TJkLwEbIxOUOgBYptG2RSKSLxWhQzg2EKDF3DxkVjy3pK3RYF
      Fc/wbGPJHApOgaHlSBGiNuYhlVERlolmmFBQydK4HzWnU722lbrwPB1Ywk31khrIpUmlUmQ1
      A2EZ6KaNOxCnZe0ShBxk/cbn8M63lxJ+apvKMbPTZauGhTA1DEsQKW+g1C/IGh5WbVxH7BH8
      bs5+gAVIb28vdXV1T7oaTy3Dw8OOFsjBIR8cA3BY1DgG4LCocQzAYVHjGIDDosYxAIdFjWMA
      DosaxxPsMCvaWA9v/PkdBictKldu4Wc7t+BOdvDnt/9Kghgv7N1LhXmFc8MhtrcuY6LvLEcu
      C17+UcuTrvq8cHoAh1mxMmP0uBp5/Z/+SGXiSz48dpa3/nMfzT//HX//2o+RU5Okx/vp7J0O
      4JWZ6Keto/8J13r+OAbgMAcShUURhC6oKPHSdvxzeidsmpbWoABTw720t7fTeWUALb8cGAsK
      ZwjkcF+mLh3kT3/qQvhi7H3tGZZFmjj9+XGOvvcfnF33CpsjkEkM09vbS2JoDMN++nJKOgbg
      cF8KVmzj9d//AgDb0OjrH2Lllh9TXynzr++18b1tXsqXt7Jnz/e59pVNz/GnT1bmGIDDrMie
      EFXx2B2/CMYun+Sdt99G8sXY/eovKdDbKY1Nb1P0BKJUlT59BuCoQRcgjhr00XDUoA4OeeIY
      gMOixjEAh0XN3wChHz8A3USODgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      2E8/wKlwnd5/4YIE4CUlp0DC1VxzBMhbDsvpfHmDAi1B+amhW7kmALFsnl8MRsuGK8C/v9hW
      +4LEniCnQMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtVe
      mi/DLT6aY+rmSNnwYHOYnitndqEisR+8NAFILK4ycaM8AE1drRIAUdWWT4FiS7PcufcQC4el
      6RGuXv2c1UyF790LsQdtOQCO6kV3TGzLZHwhwcULPTx6MLYNpQmx87Z8ClQfaeTx3Dw4Fh5/
      AJ+/Ho3ZQo8llrV5jx0vYPHWFPHpCv3jHmuh8WQ7VoUfs0Oh55NcLkferN75xNrzOqv1vpLP
      myi5HHaVnkusJ8/81CybSl032LZNPpcjn692ZCzUaFZ6rugTppknl8ttUmMeM7fZ+CY5tXrv
      K/m8hZPLYVuVt5Vt24X1WGU9O05hGRTTpNrv63KmCba6SQ2FZay2v1hWoYZq29pZ29b5KuvB
      oezZrFsOwMLUKOOTkxCO4CQe098fxRPu2vYeYhzLxqpwaqXYYBgGmla51xBVVTAMA73aSqEw
      PhR+HVZp0+i6B8MwUDfp2cQwDNCq92xiGMYmPbgUajSr7t7g8egYhlG1hxhd1/EY1X/a6fF4
      MAwds0oPMbqu4TEM1GctQ5X1rCiFZcCuXoPh8YBuVN0XdL2wjGqVXmg0rVCDo2lUeitR1ra1
      XqUGZX1bP51n1Wqfkz8U5tTZsxj+EIfPnGMlnqGxSZ6gIPaHLQegrqGJuqL/W7yBrzUd69Ec
      Tq4819qBJpQ6/9esTojN7ZnLoPbCKmTKn8njNIclAGLHyJ1g4Wo1OQJYeZOpodsV2w6dPItW
      7UOLEDusJgHIpdP87u//tmLbX//3/4kWkgCI3SGnQMLVJADC1SQAwtUkAMLVJADC1SQAwtUk
      AMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC
      1bYxAA6rCxN8+tmXJM2tPwtUiFrYvgBYJg8nlzh/5ghDg6PbNlkhdtK2BcCxLbyhOgLBJjxK
      ersmK8SO2rbnAimah3xsiQcPUjhG83ZNVogdtX2nQKpO3+k+DH8Tp050bttkhdhJ2/pkOG8g
      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
      ftKXCoXYbQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
